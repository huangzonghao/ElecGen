// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: component_structure.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "component_structure.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Electronics {
class bboxDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<bbox> {
} _bbox_default_instance_;
class boundsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<bounds> {
} _bounds_default_instance_;
class lin_consDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<lin_cons> {
} _lin_cons_default_instance_;
class pinDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<pin> {
} _pin_default_instance_;
class dependenceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<dependence> {
} _dependence_default_instance_;
class ComponentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Component> {
} _Component_default_instance_;
class MotorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Motor> {
} _Motor_default_instance_;
class Voltage_RegulatorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Voltage_Regulator> {
} _Voltage_Regulator_default_instance_;
class H_BridgeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<H_Bridge> {
} _H_Bridge_default_instance_;
class Micro_ControllerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Micro_Controller> {
} _Micro_Controller_default_instance_;
class BatteryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Battery> {
} _Battery_default_instance_;
class BluetoothDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Bluetooth> {
} _Bluetooth_default_instance_;
class CameraDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Camera> {
} _Camera_default_instance_;
class Force_SensorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Force_Sensor> {
} _Force_Sensor_default_instance_;

namespace protobuf_component_5fstructure_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(bbox, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(bbox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(bbox, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(bbox, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(bbox, height_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(bounds, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(bounds, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(bounds, lb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(bounds, ub_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lin_cons, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lin_cons, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lin_cons, var_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lin_cons, coefficient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lin_cons, constant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lin_cons, type_),
  ~0u,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pin, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pin, pin_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pin, func_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pin, phys_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pin, io_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pin, connection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pin, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pin, v_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pin, i_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pin, dependents_),
  0,
  6,
  7,
  8,
  9,
  5,
  4,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dependence, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dependence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dependence, others_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, _internal_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, _extensions_),
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, component_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, component_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, component_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, pin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, nonlin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, weight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, price_),
  0,
  1,
  2,
  ~0u,
  6,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motor, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motor, kt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motor, ke_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motor, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motor, vin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motor, i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motor, torq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motor, vel_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Voltage_Regulator, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Voltage_Regulator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Voltage_Regulator, cons_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(H_Bridge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(H_Bridge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(H_Bridge, logic_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(H_Bridge, linear_cons_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Micro_Controller, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Micro_Controller, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Micro_Controller, logic_level_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Battery, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Battery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Battery, capacity_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bluetooth, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bluetooth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bluetooth, frequency_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Camera, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Camera, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Camera, frequency_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Force_Sensor, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Force_Sensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(bbox)},
  { 11, 18, sizeof(bounds)},
  { 20, 29, sizeof(lin_cons)},
  { 33, 48, sizeof(pin)},
  { 58, 64, sizeof(dependence)},
  { 65, 78, sizeof(Component)},
  { 86, 98, sizeof(Motor)},
  { 105, 111, sizeof(Voltage_Regulator)},
  { 112, 119, sizeof(H_Bridge)},
  { 121, 127, sizeof(Micro_Controller)},
  { 128, 134, sizeof(Battery)},
  { 135, 141, sizeof(Bluetooth)},
  { 142, 148, sizeof(Camera)},
  { 149, 154, sizeof(Force_Sensor)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_bbox_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_bounds_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_lin_cons_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_pin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_dependence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Component_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Motor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Voltage_Regulator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_H_Bridge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Micro_Controller_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Battery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Bluetooth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Camera_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Force_Sensor_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "component_structure.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

}  // namespace

void TableStruct::Shutdown() {
  _bbox_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _bounds_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _lin_cons_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _pin_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _dependence_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _Component_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _Motor_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _Voltage_Regulator_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _H_Bridge_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _Micro_Controller_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _Battery_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _Bluetooth_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _Camera_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _Force_Sensor_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _bbox_default_instance_.DefaultConstruct();
  _bounds_default_instance_.DefaultConstruct();
  _lin_cons_default_instance_.DefaultConstruct();
  _pin_default_instance_.DefaultConstruct();
  _dependence_default_instance_.DefaultConstruct();
  _Component_default_instance_.DefaultConstruct();
  _Motor_default_instance_.DefaultConstruct();
  _Voltage_Regulator_default_instance_.DefaultConstruct();
  _H_Bridge_default_instance_.DefaultConstruct();
  _Micro_Controller_default_instance_.DefaultConstruct();
  _Battery_default_instance_.DefaultConstruct();
  _Bluetooth_default_instance_.DefaultConstruct();
  _Camera_default_instance_.DefaultConstruct();
  _Force_Sensor_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::Electronics::Component::internal_default_instance(),
    101, 11, false, false,
    ::Electronics::Motor::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::Electronics::Component::internal_default_instance(),
    106, 11, false, false,
    ::Electronics::Voltage_Regulator::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::Electronics::Component::internal_default_instance(),
    102, 11, false, false,
    ::Electronics::H_Bridge::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::Electronics::Component::internal_default_instance(),
    104, 11, false, false,
    ::Electronics::Micro_Controller::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::Electronics::Component::internal_default_instance(),
    103, 11, false, false,
    ::Electronics::Battery::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::Electronics::Component::internal_default_instance(),
    108, 11, false, false,
    ::Electronics::Bluetooth::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::Electronics::Component::internal_default_instance(),
    107, 11, false, false,
    ::Electronics::Camera::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::Electronics::Component::internal_default_instance(),
    105, 11, false, false,
    ::Electronics::Force_Sensor::internal_default_instance());
  _pin_default_instance_.get_mutable()->v_bound_ = const_cast< ::Electronics::bounds*>(
      ::Electronics::bounds::internal_default_instance());
  _pin_default_instance_.get_mutable()->i_bound_ = const_cast< ::Electronics::bounds*>(
      ::Electronics::bounds::internal_default_instance());
  _pin_default_instance_.get_mutable()->dependents_ = const_cast< ::Electronics::dependence*>(
      ::Electronics::dependence::internal_default_instance());
  _Component_default_instance_.get_mutable()->size_ = const_cast< ::Electronics::bbox*>(
      ::Electronics::bbox::internal_default_instance());
  _H_Bridge_default_instance_.get_mutable()->logic_level_ = const_cast< ::Electronics::bounds*>(
      ::Electronics::bounds::internal_default_instance());
  _Micro_Controller_default_instance_.get_mutable()->logic_level_ = const_cast< ::Electronics::bounds*>(
      ::Electronics::bounds::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\031component_structure.proto\022\013Electronics"
      "\"5\n\004bbox\022\016\n\006length\030\001 \002(\001\022\r\n\005width\030\002 \002(\001\022"
      "\016\n\006height\030\003 \002(\001\" \n\006bounds\022\n\n\002lb\030\001 \002(\001\022\n\n"
      "\002ub\030\002 \002(\001\"h\n\010lin_cons\022\020\n\010var_name\030\001 \003(\t\022"
      "\023\n\013coefficient\030\002 \003(\001\022\020\n\010constant\030\003 \002(\001\022#"
      "\n\004type\030\004 \002(\0162\025.Electronics.RELATION\"\353\002\n\003"
      "pin\022\014\n\004name\030\001 \002(\t\022%\n\tpin_class\030\002 \002(\0162\022.E"
      "lectronics.CLASS\022-\n\tfunc_type\030\003 \002(\0162\032.El"
      "ectronics.FUNCTION_TYPE\022-\n\tphys_type\030\004 \002"
      "(\0162\032.Electronics.PHYSICAL_TYPE\022\033\n\002io\030\005 \002"
      "(\0162\017.Electronics.IO\022+\n\nconnection\030\006 \002(\0162"
      "\027.Electronics.CONNECTION\022\016\n\006status\030\007 \002(\010"
      "\022$\n\007v_bound\030\010 \002(\0132\023.Electronics.bounds\022$"
      "\n\007i_bound\030\t \002(\0132\023.Electronics.bounds\022+\n\n"
      "dependents\030\n \002(\0132\027.Electronics.dependenc"
      "e\"\034\n\ndependence\022\016\n\006others\030\001 \003(\t\"\312\001\n\tComp"
      "onent\022\026\n\016component_name\030\001 \002(\t\022\026\n\016compone"
      "nt_type\030\002 \002(\t\022\027\n\017component_class\030\003 \002(\t\022\035"
      "\n\003pin\030\004 \003(\0132\020.Electronics.pin\022\016\n\006nonlin\030"
      "\005 \002(\010\022\037\n\004size\030\006 \002(\0132\021.Electronics.bbox\022\016"
      "\n\006weight\030\007 \002(\001\022\r\n\005price\030\010 \002(\001*\005\010d\020\311\001\"\230\001\n"
      "\005Motor\022\n\n\002kt\030\001 \001(\001\022\n\n\002ke\030\002 \001(\001\022\t\n\001r\030\003 \001("
      "\001\022\013\n\003vin\030\004 \001(\001\022\t\n\001i\030\005 \001(\001\022\014\n\004torq\030\006 \001(\001\022"
      "\013\n\003vel\030\007 \001(\00129\n\005motor\022\026.Electronics.Comp"
      "onent\030e \001(\0132\022.Electronics.Motor\"\213\001\n\021Volt"
      "age_Regulator\022#\n\004cons\030\001 \003(\0132\025.Electronic"
      "s.lin_cons2Q\n\021voltage_regulator\022\026.Electr"
      "onics.Component\030j \001(\0132\036.Electronics.Volt"
      "age_Regulator\"\241\001\n\010H_Bridge\022(\n\013logic_leve"
      "l\030\001 \001(\0132\023.Electronics.bounds\022*\n\013linear_c"
      "ons\030\002 \003(\0132\025.Electronics.lin_cons2\?\n\010h_br"
      "idge\022\026.Electronics.Component\030f \001(\0132\025.Ele"
      "ctronics.H_Bridge\"\215\001\n\020Micro_Controller\022("
      "\n\013logic_level\030\001 \001(\0132\023.Electronics.bounds"
      "2O\n\020micro_controller\022\026.Electronics.Compo"
      "nent\030h \001(\0132\035.Electronics.Micro_Controlle"
      "r\"Z\n\007Battery\022\020\n\010capacity\030\001 \001(\0012=\n\007batter"
      "y\022\026.Electronics.Component\030g \001(\0132\024.Electr"
      "onics.Battery\"a\n\tBluetooth\022\021\n\tfrequency\030"
      "\001 \001(\0012A\n\tbluetooth\022\026.Electronics.Compone"
      "nt\030l \001(\0132\026.Electronics.Bluetooth\"X\n\006Came"
      "ra\022\021\n\tfrequency\030\001 \001(\0012;\n\006camera\022\026.Electr"
      "onics.Component\030k \001(\0132\023.Electronics.Came"
      "ra\"W\n\014Force_Sensor2G\n\014force_sensor\022\026.Ele"
      "ctronics.Component\030i \001(\0132\031.Electronics.F"
      "orce_Sensor*,\n\010RELATION\022\t\n\005EQUAL\020\000\022\010\n\004LE"
      "SS\020\001\022\013\n\007GREATER\020\002*#\n\002IO\022\006\n\002IN\020\004\022\007\n\003OUT\020\005"
      "\022\014\n\010BIDIRECT\020\006**\n\005CLASS\022\t\n\005POWER\020\007\022\014\n\010FU"
      "NCTION\020\010\022\010\n\004BOTH\020\t*\327\006\n\rFUNCTION_TYPE\022\016\n\n"
      "ELECTRICAL\020\n\022\021\n\rCOMMUNICATION\020\013\022\r\n\tFW_UP"
      "DATE\020\014\022\t\n\005RESET\020\r\022\010\n\004MODE\020\016\022\t\n\005LOGIC\020\017\022\t"
      "\n\005MOTOR\020\020\022\n\n\006ENABLE\020\021\022\007\n\003GND\020\022\022\t\n\005OTHER\020"
      "\023\022\007\n\003PWM\020\024\022\013\n\007DIGITAL\020\025\022\n\n\006ANALOG\020\026\022\026\n\022E"
      "XTERNAL_INTERRUPT\020\027\022\013\n\007SPI_SCK\020\030\022\014\n\010SPI_"
      "MOSI\020\031\022\014\n\010SPI_MISO\020\032\022\n\n\006SPI_SS\020\033\022\013\n\007I2C_"
      "SDA\020\034\022\013\n\007I2C_SCL\020\035\022\013\n\007UART_TX\020\036\022\013\n\007UART_"
      "RX\020\037\022\023\n\017DIGITAL_UART_TX\020 \022\023\n\017DIGITAL_UAR"
      "T_RX\020!\022\023\n\017DIGITAL_SPI_SCK\020\"\022\024\n\020DIGITAL_S"
      "PI_MOSI\020#\022\024\n\020DIGITAL_SPI_MISO\020$\022\022\n\016DIGIT"
      "AL_SPI_SS\020%\022\036\n\032DIGITAL_EXTERNAL_INTERRUP"
      "T\020&\022\032\n\026PWM_EXTERNAL_INTERRUPT\020\'\022\017\n\013PWM_S"
      "PI_SCK\020(\022\020\n\014PWM_SPI_MOSI\020)\022\020\n\014PWM_SPI_MI"
      "SO\020*\022\016\n\nPWM_SPI_SS\020+\022\022\n\016ANALOG_I2C_SDA\020,"
      "\022\022\n\016ANALOG_I2C_SCL\020-\022\023\n\017UART_RX_I2C_SDA\020"
      ".\022\023\n\017UART_RX_I2C_SCL\020/\022\023\n\017UART_TX_I2C_SD"
      "A\0200\022\023\n\017UART_TX_I2C_SCL\0201\022&\n\"DIGITAL_EXTE"
      "RNAL_INTERRUPT_I2C_SDA\0202\022&\n\"DIGITAL_EXTE"
      "RNAL_INTERRUPT_I2C_SCL\0203\022&\n\"DIGITAL_EXTE"
      "RNAL_INTERRUPT_UART_RX\0204\022&\n\"DIGITAL_EXTE"
      "RNAL_INTERRUPT_UART_TX\0205\022\n\n\006ADJUST\0206*4\n\r"
      "PHYSICAL_TYPE\022\n\n\006NORMAL\0207\022\007\n\003USB\0208\022\016\n\nPO"
      "WER_JACK\0209*\036\n\nCONNECTION\022\007\n\003OTO\020\'\022\007\n\003OTM"
      "\020("
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2882);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "component_structure.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_component_5fstructure_2eproto

const ::google::protobuf::EnumDescriptor* RELATION_descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_enum_descriptors[0];
}
bool RELATION_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* IO_descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_enum_descriptors[1];
}
bool IO_IsValid(int value) {
  switch (value) {
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CLASS_descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_enum_descriptors[2];
}
bool CLASS_IsValid(int value) {
  switch (value) {
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FUNCTION_TYPE_descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_enum_descriptors[3];
}
bool FUNCTION_TYPE_IsValid(int value) {
  switch (value) {
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PHYSICAL_TYPE_descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_enum_descriptors[4];
}
bool PHYSICAL_TYPE_IsValid(int value) {
  switch (value) {
    case 55:
    case 56:
    case 57:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CONNECTION_descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_enum_descriptors[5];
}
bool CONNECTION_IsValid(int value) {
  switch (value) {
    case 39:
    case 40:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int bbox::kLengthFieldNumber;
const int bbox::kWidthFieldNumber;
const int bbox::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

bbox::bbox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_component_5fstructure_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Electronics.bbox)
}
bbox::bbox(const bbox& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&length_, &from.length_,
    reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&length_) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:Electronics.bbox)
}

void bbox::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&length_, 0, reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&length_) + sizeof(height_));
}

bbox::~bbox() {
  // @@protoc_insertion_point(destructor:Electronics.bbox)
  SharedDtor();
}

void bbox::SharedDtor() {
}

void bbox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* bbox::descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const bbox& bbox::default_instance() {
  protobuf_component_5fstructure_2eproto::InitDefaults();
  return *internal_default_instance();
}

bbox* bbox::New(::google::protobuf::Arena* arena) const {
  bbox* n = new bbox;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void bbox::Clear() {
// @@protoc_insertion_point(message_clear_start:Electronics.bbox)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&length_, 0, reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&length_) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool bbox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Electronics.bbox)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double length = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Electronics.bbox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Electronics.bbox)
  return false;
#undef DO_
}

void bbox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Electronics.bbox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double length = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->length(), output);
  }

  // required double width = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->width(), output);
  }

  // required double height = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Electronics.bbox)
}

::google::protobuf::uint8* bbox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Electronics.bbox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double length = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->length(), target);
  }

  // required double width = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->width(), target);
  }

  // required double height = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Electronics.bbox)
  return target;
}

size_t bbox::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Electronics.bbox)
  size_t total_size = 0;

  if (has_length()) {
    // required double length = 1;
    total_size += 1 + 8;
  }

  if (has_width()) {
    // required double width = 2;
    total_size += 1 + 8;
  }

  if (has_height()) {
    // required double height = 3;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t bbox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Electronics.bbox)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required double length = 1;
    total_size += 1 + 8;

    // required double width = 2;
    total_size += 1 + 8;

    // required double height = 3;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void bbox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Electronics.bbox)
  GOOGLE_DCHECK_NE(&from, this);
  const bbox* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const bbox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Electronics.bbox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Electronics.bbox)
    MergeFrom(*source);
  }
}

void bbox::MergeFrom(const bbox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Electronics.bbox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      length_ = from.length_;
    }
    if (cached_has_bits & 0x00000002u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000004u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void bbox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Electronics.bbox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void bbox::CopyFrom(const bbox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Electronics.bbox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool bbox::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void bbox::Swap(bbox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void bbox::InternalSwap(bbox* other) {
  std::swap(length_, other->length_);
  std::swap(width_, other->width_);
  std::swap(height_, other->height_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata bbox::GetMetadata() const {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// bbox

// required double length = 1;
bool bbox::has_length() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void bbox::set_has_length() {
  _has_bits_[0] |= 0x00000001u;
}
void bbox::clear_has_length() {
  _has_bits_[0] &= ~0x00000001u;
}
void bbox::clear_length() {
  length_ = 0;
  clear_has_length();
}
double bbox::length() const {
  // @@protoc_insertion_point(field_get:Electronics.bbox.length)
  return length_;
}
void bbox::set_length(double value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:Electronics.bbox.length)
}

// required double width = 2;
bool bbox::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void bbox::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
void bbox::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
void bbox::clear_width() {
  width_ = 0;
  clear_has_width();
}
double bbox::width() const {
  // @@protoc_insertion_point(field_get:Electronics.bbox.width)
  return width_;
}
void bbox::set_width(double value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:Electronics.bbox.width)
}

// required double height = 3;
bool bbox::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void bbox::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
void bbox::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
void bbox::clear_height() {
  height_ = 0;
  clear_has_height();
}
double bbox::height() const {
  // @@protoc_insertion_point(field_get:Electronics.bbox.height)
  return height_;
}
void bbox::set_height(double value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:Electronics.bbox.height)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int bounds::kLbFieldNumber;
const int bounds::kUbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

bounds::bounds()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_component_5fstructure_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Electronics.bounds)
}
bounds::bounds(const bounds& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lb_, &from.lb_,
    reinterpret_cast<char*>(&ub_) -
    reinterpret_cast<char*>(&lb_) + sizeof(ub_));
  // @@protoc_insertion_point(copy_constructor:Electronics.bounds)
}

void bounds::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lb_, 0, reinterpret_cast<char*>(&ub_) -
    reinterpret_cast<char*>(&lb_) + sizeof(ub_));
}

bounds::~bounds() {
  // @@protoc_insertion_point(destructor:Electronics.bounds)
  SharedDtor();
}

void bounds::SharedDtor() {
}

void bounds::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* bounds::descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const bounds& bounds::default_instance() {
  protobuf_component_5fstructure_2eproto::InitDefaults();
  return *internal_default_instance();
}

bounds* bounds::New(::google::protobuf::Arena* arena) const {
  bounds* n = new bounds;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void bounds::Clear() {
// @@protoc_insertion_point(message_clear_start:Electronics.bounds)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&lb_, 0, reinterpret_cast<char*>(&ub_) -
      reinterpret_cast<char*>(&lb_) + sizeof(ub_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool bounds::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Electronics.bounds)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double lb = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_lb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double ub = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_ub();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ub_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Electronics.bounds)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Electronics.bounds)
  return false;
#undef DO_
}

void bounds::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Electronics.bounds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double lb = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->lb(), output);
  }

  // required double ub = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ub(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Electronics.bounds)
}

::google::protobuf::uint8* bounds::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Electronics.bounds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double lb = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->lb(), target);
  }

  // required double ub = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->ub(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Electronics.bounds)
  return target;
}

size_t bounds::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Electronics.bounds)
  size_t total_size = 0;

  if (has_lb()) {
    // required double lb = 1;
    total_size += 1 + 8;
  }

  if (has_ub()) {
    // required double ub = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t bounds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Electronics.bounds)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double lb = 1;
    total_size += 1 + 8;

    // required double ub = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void bounds::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Electronics.bounds)
  GOOGLE_DCHECK_NE(&from, this);
  const bounds* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const bounds>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Electronics.bounds)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Electronics.bounds)
    MergeFrom(*source);
  }
}

void bounds::MergeFrom(const bounds& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Electronics.bounds)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      lb_ = from.lb_;
    }
    if (cached_has_bits & 0x00000002u) {
      ub_ = from.ub_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void bounds::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Electronics.bounds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void bounds::CopyFrom(const bounds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Electronics.bounds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool bounds::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void bounds::Swap(bounds* other) {
  if (other == this) return;
  InternalSwap(other);
}
void bounds::InternalSwap(bounds* other) {
  std::swap(lb_, other->lb_);
  std::swap(ub_, other->ub_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata bounds::GetMetadata() const {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// bounds

// required double lb = 1;
bool bounds::has_lb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void bounds::set_has_lb() {
  _has_bits_[0] |= 0x00000001u;
}
void bounds::clear_has_lb() {
  _has_bits_[0] &= ~0x00000001u;
}
void bounds::clear_lb() {
  lb_ = 0;
  clear_has_lb();
}
double bounds::lb() const {
  // @@protoc_insertion_point(field_get:Electronics.bounds.lb)
  return lb_;
}
void bounds::set_lb(double value) {
  set_has_lb();
  lb_ = value;
  // @@protoc_insertion_point(field_set:Electronics.bounds.lb)
}

// required double ub = 2;
bool bounds::has_ub() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void bounds::set_has_ub() {
  _has_bits_[0] |= 0x00000002u;
}
void bounds::clear_has_ub() {
  _has_bits_[0] &= ~0x00000002u;
}
void bounds::clear_ub() {
  ub_ = 0;
  clear_has_ub();
}
double bounds::ub() const {
  // @@protoc_insertion_point(field_get:Electronics.bounds.ub)
  return ub_;
}
void bounds::set_ub(double value) {
  set_has_ub();
  ub_ = value;
  // @@protoc_insertion_point(field_set:Electronics.bounds.ub)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int lin_cons::kVarNameFieldNumber;
const int lin_cons::kCoefficientFieldNumber;
const int lin_cons::kConstantFieldNumber;
const int lin_cons::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

lin_cons::lin_cons()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_component_5fstructure_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Electronics.lin_cons)
}
lin_cons::lin_cons(const lin_cons& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      var_name_(from.var_name_),
      coefficient_(from.coefficient_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&constant_, &from.constant_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&constant_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:Electronics.lin_cons)
}

void lin_cons::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&constant_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&constant_) + sizeof(type_));
}

lin_cons::~lin_cons() {
  // @@protoc_insertion_point(destructor:Electronics.lin_cons)
  SharedDtor();
}

void lin_cons::SharedDtor() {
}

void lin_cons::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* lin_cons::descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const lin_cons& lin_cons::default_instance() {
  protobuf_component_5fstructure_2eproto::InitDefaults();
  return *internal_default_instance();
}

lin_cons* lin_cons::New(::google::protobuf::Arena* arena) const {
  lin_cons* n = new lin_cons;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void lin_cons::Clear() {
// @@protoc_insertion_point(message_clear_start:Electronics.lin_cons)
  var_name_.Clear();
  coefficient_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&constant_, 0, reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&constant_) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool lin_cons::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Electronics.lin_cons)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string var_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_var_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->var_name(this->var_name_size() - 1).data(),
            this->var_name(this->var_name_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Electronics.lin_cons.var_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double coefficient = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17u, input, this->mutable_coefficient())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_coefficient())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double constant = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_constant();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &constant_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Electronics.RELATION type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Electronics::RELATION_IsValid(value)) {
            set_type(static_cast< ::Electronics::RELATION >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Electronics.lin_cons)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Electronics.lin_cons)
  return false;
#undef DO_
}

void lin_cons::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Electronics.lin_cons)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string var_name = 1;
  for (int i = 0, n = this->var_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->var_name(i).data(), this->var_name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Electronics.lin_cons.var_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->var_name(i), output);
  }

  // repeated double coefficient = 2;
  for (int i = 0, n = this->coefficient_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->coefficient(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required double constant = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->constant(), output);
  }

  // required .Electronics.RELATION type = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Electronics.lin_cons)
}

::google::protobuf::uint8* lin_cons::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Electronics.lin_cons)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string var_name = 1;
  for (int i = 0, n = this->var_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->var_name(i).data(), this->var_name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Electronics.lin_cons.var_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->var_name(i), target);
  }

  // repeated double coefficient = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(2, this->coefficient_, target);

  cached_has_bits = _has_bits_[0];
  // required double constant = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->constant(), target);
  }

  // required .Electronics.RELATION type = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Electronics.lin_cons)
  return target;
}

size_t lin_cons::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Electronics.lin_cons)
  size_t total_size = 0;

  if (has_constant()) {
    // required double constant = 3;
    total_size += 1 + 8;
  }

  if (has_type()) {
    // required .Electronics.RELATION type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t lin_cons::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Electronics.lin_cons)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double constant = 3;
    total_size += 1 + 8;

    // required .Electronics.RELATION type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string var_name = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->var_name_size());
  for (int i = 0, n = this->var_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->var_name(i));
  }

  // repeated double coefficient = 2;
  {
    unsigned int count = this->coefficient_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->coefficient_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void lin_cons::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Electronics.lin_cons)
  GOOGLE_DCHECK_NE(&from, this);
  const lin_cons* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const lin_cons>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Electronics.lin_cons)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Electronics.lin_cons)
    MergeFrom(*source);
  }
}

void lin_cons::MergeFrom(const lin_cons& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Electronics.lin_cons)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  var_name_.MergeFrom(from.var_name_);
  coefficient_.MergeFrom(from.coefficient_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      constant_ = from.constant_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void lin_cons::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Electronics.lin_cons)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void lin_cons::CopyFrom(const lin_cons& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Electronics.lin_cons)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool lin_cons::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void lin_cons::Swap(lin_cons* other) {
  if (other == this) return;
  InternalSwap(other);
}
void lin_cons::InternalSwap(lin_cons* other) {
  var_name_.InternalSwap(&other->var_name_);
  coefficient_.InternalSwap(&other->coefficient_);
  std::swap(constant_, other->constant_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata lin_cons::GetMetadata() const {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// lin_cons

// repeated string var_name = 1;
int lin_cons::var_name_size() const {
  return var_name_.size();
}
void lin_cons::clear_var_name() {
  var_name_.Clear();
}
const ::std::string& lin_cons::var_name(int index) const {
  // @@protoc_insertion_point(field_get:Electronics.lin_cons.var_name)
  return var_name_.Get(index);
}
::std::string* lin_cons::mutable_var_name(int index) {
  // @@protoc_insertion_point(field_mutable:Electronics.lin_cons.var_name)
  return var_name_.Mutable(index);
}
void lin_cons::set_var_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Electronics.lin_cons.var_name)
  var_name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void lin_cons::set_var_name(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Electronics.lin_cons.var_name)
  var_name_.Mutable(index)->assign(std::move(value));
}
#endif
void lin_cons::set_var_name(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  var_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Electronics.lin_cons.var_name)
}
void lin_cons::set_var_name(int index, const char* value, size_t size) {
  var_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Electronics.lin_cons.var_name)
}
::std::string* lin_cons::add_var_name() {
  // @@protoc_insertion_point(field_add_mutable:Electronics.lin_cons.var_name)
  return var_name_.Add();
}
void lin_cons::add_var_name(const ::std::string& value) {
  var_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Electronics.lin_cons.var_name)
}
#if LANG_CXX11
void lin_cons::add_var_name(::std::string&& value) {
  var_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Electronics.lin_cons.var_name)
}
#endif
void lin_cons::add_var_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  var_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Electronics.lin_cons.var_name)
}
void lin_cons::add_var_name(const char* value, size_t size) {
  var_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Electronics.lin_cons.var_name)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
lin_cons::var_name() const {
  // @@protoc_insertion_point(field_list:Electronics.lin_cons.var_name)
  return var_name_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
lin_cons::mutable_var_name() {
  // @@protoc_insertion_point(field_mutable_list:Electronics.lin_cons.var_name)
  return &var_name_;
}

// repeated double coefficient = 2;
int lin_cons::coefficient_size() const {
  return coefficient_.size();
}
void lin_cons::clear_coefficient() {
  coefficient_.Clear();
}
double lin_cons::coefficient(int index) const {
  // @@protoc_insertion_point(field_get:Electronics.lin_cons.coefficient)
  return coefficient_.Get(index);
}
void lin_cons::set_coefficient(int index, double value) {
  coefficient_.Set(index, value);
  // @@protoc_insertion_point(field_set:Electronics.lin_cons.coefficient)
}
void lin_cons::add_coefficient(double value) {
  coefficient_.Add(value);
  // @@protoc_insertion_point(field_add:Electronics.lin_cons.coefficient)
}
const ::google::protobuf::RepeatedField< double >&
lin_cons::coefficient() const {
  // @@protoc_insertion_point(field_list:Electronics.lin_cons.coefficient)
  return coefficient_;
}
::google::protobuf::RepeatedField< double >*
lin_cons::mutable_coefficient() {
  // @@protoc_insertion_point(field_mutable_list:Electronics.lin_cons.coefficient)
  return &coefficient_;
}

// required double constant = 3;
bool lin_cons::has_constant() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void lin_cons::set_has_constant() {
  _has_bits_[0] |= 0x00000001u;
}
void lin_cons::clear_has_constant() {
  _has_bits_[0] &= ~0x00000001u;
}
void lin_cons::clear_constant() {
  constant_ = 0;
  clear_has_constant();
}
double lin_cons::constant() const {
  // @@protoc_insertion_point(field_get:Electronics.lin_cons.constant)
  return constant_;
}
void lin_cons::set_constant(double value) {
  set_has_constant();
  constant_ = value;
  // @@protoc_insertion_point(field_set:Electronics.lin_cons.constant)
}

// required .Electronics.RELATION type = 4;
bool lin_cons::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void lin_cons::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void lin_cons::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void lin_cons::clear_type() {
  type_ = 0;
  clear_has_type();
}
::Electronics::RELATION lin_cons::type() const {
  // @@protoc_insertion_point(field_get:Electronics.lin_cons.type)
  return static_cast< ::Electronics::RELATION >(type_);
}
void lin_cons::set_type(::Electronics::RELATION value) {
  assert(::Electronics::RELATION_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Electronics.lin_cons.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pin::kNameFieldNumber;
const int pin::kPinClassFieldNumber;
const int pin::kFuncTypeFieldNumber;
const int pin::kPhysTypeFieldNumber;
const int pin::kIoFieldNumber;
const int pin::kConnectionFieldNumber;
const int pin::kStatusFieldNumber;
const int pin::kVBoundFieldNumber;
const int pin::kIBoundFieldNumber;
const int pin::kDependentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pin::pin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_component_5fstructure_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Electronics.pin)
}
pin::pin(const pin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_v_bound()) {
    v_bound_ = new ::Electronics::bounds(*from.v_bound_);
  } else {
    v_bound_ = NULL;
  }
  if (from.has_i_bound()) {
    i_bound_ = new ::Electronics::bounds(*from.i_bound_);
  } else {
    i_bound_ = NULL;
  }
  if (from.has_dependents()) {
    dependents_ = new ::Electronics::dependence(*from.dependents_);
  } else {
    dependents_ = NULL;
  }
  ::memcpy(&status_, &from.status_,
    reinterpret_cast<char*>(&io_) -
    reinterpret_cast<char*>(&status_) + sizeof(io_));
  // @@protoc_insertion_point(copy_constructor:Electronics.pin)
}

void pin::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&v_bound_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&v_bound_) + sizeof(status_));
  connection_ = 39;
  pin_class_ = 7;
  func_type_ = 10;
  phys_type_ = 55;
  io_ = 4;
}

pin::~pin() {
  // @@protoc_insertion_point(destructor:Electronics.pin)
  SharedDtor();
}

void pin::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete v_bound_;
  }
  if (this != internal_default_instance()) {
    delete i_bound_;
  }
  if (this != internal_default_instance()) {
    delete dependents_;
  }
}

void pin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pin::descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pin& pin::default_instance() {
  protobuf_component_5fstructure_2eproto::InitDefaults();
  return *internal_default_instance();
}

pin* pin::New(::google::protobuf::Arena* arena) const {
  pin* n = new pin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void pin::Clear() {
// @@protoc_insertion_point(message_clear_start:Electronics.pin)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_v_bound()) {
      GOOGLE_DCHECK(v_bound_ != NULL);
      v_bound_->::Electronics::bounds::Clear();
    }
    if (has_i_bound()) {
      GOOGLE_DCHECK(i_bound_ != NULL);
      i_bound_->::Electronics::bounds::Clear();
    }
    if (has_dependents()) {
      GOOGLE_DCHECK(dependents_ != NULL);
      dependents_->::Electronics::dependence::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    status_ = false;
    connection_ = 39;
    pin_class_ = 7;
    func_type_ = 10;
  }
  if (_has_bits_[8 / 32] & 768u) {
    phys_type_ = 55;
    io_ = 4;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool pin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Electronics.pin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Electronics.pin.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Electronics.CLASS pin_class = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Electronics::CLASS_IsValid(value)) {
            set_pin_class(static_cast< ::Electronics::CLASS >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Electronics.FUNCTION_TYPE func_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Electronics::FUNCTION_TYPE_IsValid(value)) {
            set_func_type(static_cast< ::Electronics::FUNCTION_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Electronics.PHYSICAL_TYPE phys_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Electronics::PHYSICAL_TYPE_IsValid(value)) {
            set_phys_type(static_cast< ::Electronics::PHYSICAL_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Electronics.IO io = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Electronics::IO_IsValid(value)) {
            set_io(static_cast< ::Electronics::IO >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Electronics.CONNECTION connection = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Electronics::CONNECTION_IsValid(value)) {
            set_connection(static_cast< ::Electronics::CONNECTION >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Electronics.bounds v_bound = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v_bound()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Electronics.bounds i_bound = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_i_bound()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Electronics.dependence dependents = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dependents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Electronics.pin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Electronics.pin)
  return false;
#undef DO_
}

void pin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Electronics.pin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Electronics.pin.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .Electronics.CLASS pin_class = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->pin_class(), output);
  }

  // required .Electronics.FUNCTION_TYPE func_type = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->func_type(), output);
  }

  // required .Electronics.PHYSICAL_TYPE phys_type = 4;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->phys_type(), output);
  }

  // required .Electronics.IO io = 5;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->io(), output);
  }

  // required .Electronics.CONNECTION connection = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->connection(), output);
  }

  // required bool status = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->status(), output);
  }

  // required .Electronics.bounds v_bound = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->v_bound_, output);
  }

  // required .Electronics.bounds i_bound = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->i_bound_, output);
  }

  // required .Electronics.dependence dependents = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->dependents_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Electronics.pin)
}

::google::protobuf::uint8* pin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Electronics.pin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Electronics.pin.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .Electronics.CLASS pin_class = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->pin_class(), target);
  }

  // required .Electronics.FUNCTION_TYPE func_type = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->func_type(), target);
  }

  // required .Electronics.PHYSICAL_TYPE phys_type = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->phys_type(), target);
  }

  // required .Electronics.IO io = 5;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->io(), target);
  }

  // required .Electronics.CONNECTION connection = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->connection(), target);
  }

  // required bool status = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->status(), target);
  }

  // required .Electronics.bounds v_bound = 8;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->v_bound_, deterministic, target);
  }

  // required .Electronics.bounds i_bound = 9;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->i_bound_, deterministic, target);
  }

  // required .Electronics.dependence dependents = 10;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->dependents_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Electronics.pin)
  return target;
}

size_t pin::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Electronics.pin)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_v_bound()) {
    // required .Electronics.bounds v_bound = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v_bound_);
  }

  if (has_i_bound()) {
    // required .Electronics.bounds i_bound = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->i_bound_);
  }

  if (has_dependents()) {
    // required .Electronics.dependence dependents = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dependents_);
  }

  if (has_status()) {
    // required bool status = 7;
    total_size += 1 + 1;
  }

  if (has_connection()) {
    // required .Electronics.CONNECTION connection = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->connection());
  }

  if (has_pin_class()) {
    // required .Electronics.CLASS pin_class = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pin_class());
  }

  if (has_func_type()) {
    // required .Electronics.FUNCTION_TYPE func_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->func_type());
  }

  if (has_phys_type()) {
    // required .Electronics.PHYSICAL_TYPE phys_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->phys_type());
  }

  if (has_io()) {
    // required .Electronics.IO io = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->io());
  }

  return total_size;
}
size_t pin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Electronics.pin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000003ff) ^ 0x000003ff) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .Electronics.bounds v_bound = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v_bound_);

    // required .Electronics.bounds i_bound = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->i_bound_);

    // required .Electronics.dependence dependents = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dependents_);

    // required bool status = 7;
    total_size += 1 + 1;

    // required .Electronics.CONNECTION connection = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->connection());

    // required .Electronics.CLASS pin_class = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pin_class());

    // required .Electronics.FUNCTION_TYPE func_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->func_type());

    // required .Electronics.PHYSICAL_TYPE phys_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->phys_type());

    // required .Electronics.IO io = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->io());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Electronics.pin)
  GOOGLE_DCHECK_NE(&from, this);
  const pin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Electronics.pin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Electronics.pin)
    MergeFrom(*source);
  }
}

void pin::MergeFrom(const pin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Electronics.pin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_v_bound()->::Electronics::bounds::MergeFrom(from.v_bound());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_i_bound()->::Electronics::bounds::MergeFrom(from.i_bound());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_dependents()->::Electronics::dependence::MergeFrom(from.dependents());
    }
    if (cached_has_bits & 0x00000010u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000020u) {
      connection_ = from.connection_;
    }
    if (cached_has_bits & 0x00000040u) {
      pin_class_ = from.pin_class_;
    }
    if (cached_has_bits & 0x00000080u) {
      func_type_ = from.func_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      phys_type_ = from.phys_type_;
    }
    if (cached_has_bits & 0x00000200u) {
      io_ = from.io_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void pin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Electronics.pin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pin::CopyFrom(const pin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Electronics.pin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pin::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003ff) != 0x000003ff) return false;
  if (has_v_bound()) {
    if (!this->v_bound_->IsInitialized()) return false;
  }
  if (has_i_bound()) {
    if (!this->i_bound_->IsInitialized()) return false;
  }
  return true;
}

void pin::Swap(pin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pin::InternalSwap(pin* other) {
  name_.Swap(&other->name_);
  std::swap(v_bound_, other->v_bound_);
  std::swap(i_bound_, other->i_bound_);
  std::swap(dependents_, other->dependents_);
  std::swap(status_, other->status_);
  std::swap(connection_, other->connection_);
  std::swap(pin_class_, other->pin_class_);
  std::swap(func_type_, other->func_type_);
  std::swap(phys_type_, other->phys_type_);
  std::swap(io_, other->io_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata pin::GetMetadata() const {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// pin

// required string name = 1;
bool pin::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void pin::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void pin::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void pin::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& pin::name() const {
  // @@protoc_insertion_point(field_get:Electronics.pin.name)
  return name_.GetNoArena();
}
void pin::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Electronics.pin.name)
}
#if LANG_CXX11
void pin::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Electronics.pin.name)
}
#endif
void pin::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Electronics.pin.name)
}
void pin::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Electronics.pin.name)
}
::std::string* pin::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Electronics.pin.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* pin::release_name() {
  // @@protoc_insertion_point(field_release:Electronics.pin.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pin::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Electronics.pin.name)
}

// required .Electronics.CLASS pin_class = 2;
bool pin::has_pin_class() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void pin::set_has_pin_class() {
  _has_bits_[0] |= 0x00000040u;
}
void pin::clear_has_pin_class() {
  _has_bits_[0] &= ~0x00000040u;
}
void pin::clear_pin_class() {
  pin_class_ = 7;
  clear_has_pin_class();
}
::Electronics::CLASS pin::pin_class() const {
  // @@protoc_insertion_point(field_get:Electronics.pin.pin_class)
  return static_cast< ::Electronics::CLASS >(pin_class_);
}
void pin::set_pin_class(::Electronics::CLASS value) {
  assert(::Electronics::CLASS_IsValid(value));
  set_has_pin_class();
  pin_class_ = value;
  // @@protoc_insertion_point(field_set:Electronics.pin.pin_class)
}

// required .Electronics.FUNCTION_TYPE func_type = 3;
bool pin::has_func_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void pin::set_has_func_type() {
  _has_bits_[0] |= 0x00000080u;
}
void pin::clear_has_func_type() {
  _has_bits_[0] &= ~0x00000080u;
}
void pin::clear_func_type() {
  func_type_ = 10;
  clear_has_func_type();
}
::Electronics::FUNCTION_TYPE pin::func_type() const {
  // @@protoc_insertion_point(field_get:Electronics.pin.func_type)
  return static_cast< ::Electronics::FUNCTION_TYPE >(func_type_);
}
void pin::set_func_type(::Electronics::FUNCTION_TYPE value) {
  assert(::Electronics::FUNCTION_TYPE_IsValid(value));
  set_has_func_type();
  func_type_ = value;
  // @@protoc_insertion_point(field_set:Electronics.pin.func_type)
}

// required .Electronics.PHYSICAL_TYPE phys_type = 4;
bool pin::has_phys_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void pin::set_has_phys_type() {
  _has_bits_[0] |= 0x00000100u;
}
void pin::clear_has_phys_type() {
  _has_bits_[0] &= ~0x00000100u;
}
void pin::clear_phys_type() {
  phys_type_ = 55;
  clear_has_phys_type();
}
::Electronics::PHYSICAL_TYPE pin::phys_type() const {
  // @@protoc_insertion_point(field_get:Electronics.pin.phys_type)
  return static_cast< ::Electronics::PHYSICAL_TYPE >(phys_type_);
}
void pin::set_phys_type(::Electronics::PHYSICAL_TYPE value) {
  assert(::Electronics::PHYSICAL_TYPE_IsValid(value));
  set_has_phys_type();
  phys_type_ = value;
  // @@protoc_insertion_point(field_set:Electronics.pin.phys_type)
}

// required .Electronics.IO io = 5;
bool pin::has_io() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void pin::set_has_io() {
  _has_bits_[0] |= 0x00000200u;
}
void pin::clear_has_io() {
  _has_bits_[0] &= ~0x00000200u;
}
void pin::clear_io() {
  io_ = 4;
  clear_has_io();
}
::Electronics::IO pin::io() const {
  // @@protoc_insertion_point(field_get:Electronics.pin.io)
  return static_cast< ::Electronics::IO >(io_);
}
void pin::set_io(::Electronics::IO value) {
  assert(::Electronics::IO_IsValid(value));
  set_has_io();
  io_ = value;
  // @@protoc_insertion_point(field_set:Electronics.pin.io)
}

// required .Electronics.CONNECTION connection = 6;
bool pin::has_connection() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void pin::set_has_connection() {
  _has_bits_[0] |= 0x00000020u;
}
void pin::clear_has_connection() {
  _has_bits_[0] &= ~0x00000020u;
}
void pin::clear_connection() {
  connection_ = 39;
  clear_has_connection();
}
::Electronics::CONNECTION pin::connection() const {
  // @@protoc_insertion_point(field_get:Electronics.pin.connection)
  return static_cast< ::Electronics::CONNECTION >(connection_);
}
void pin::set_connection(::Electronics::CONNECTION value) {
  assert(::Electronics::CONNECTION_IsValid(value));
  set_has_connection();
  connection_ = value;
  // @@protoc_insertion_point(field_set:Electronics.pin.connection)
}

// required bool status = 7;
bool pin::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void pin::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
void pin::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
void pin::clear_status() {
  status_ = false;
  clear_has_status();
}
bool pin::status() const {
  // @@protoc_insertion_point(field_get:Electronics.pin.status)
  return status_;
}
void pin::set_status(bool value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Electronics.pin.status)
}

// required .Electronics.bounds v_bound = 8;
bool pin::has_v_bound() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void pin::set_has_v_bound() {
  _has_bits_[0] |= 0x00000002u;
}
void pin::clear_has_v_bound() {
  _has_bits_[0] &= ~0x00000002u;
}
void pin::clear_v_bound() {
  if (v_bound_ != NULL) v_bound_->::Electronics::bounds::Clear();
  clear_has_v_bound();
}
const ::Electronics::bounds& pin::v_bound() const {
  // @@protoc_insertion_point(field_get:Electronics.pin.v_bound)
  return v_bound_ != NULL ? *v_bound_
                         : *::Electronics::bounds::internal_default_instance();
}
::Electronics::bounds* pin::mutable_v_bound() {
  set_has_v_bound();
  if (v_bound_ == NULL) {
    v_bound_ = new ::Electronics::bounds;
  }
  // @@protoc_insertion_point(field_mutable:Electronics.pin.v_bound)
  return v_bound_;
}
::Electronics::bounds* pin::release_v_bound() {
  // @@protoc_insertion_point(field_release:Electronics.pin.v_bound)
  clear_has_v_bound();
  ::Electronics::bounds* temp = v_bound_;
  v_bound_ = NULL;
  return temp;
}
void pin::set_allocated_v_bound(::Electronics::bounds* v_bound) {
  delete v_bound_;
  v_bound_ = v_bound;
  if (v_bound) {
    set_has_v_bound();
  } else {
    clear_has_v_bound();
  }
  // @@protoc_insertion_point(field_set_allocated:Electronics.pin.v_bound)
}

// required .Electronics.bounds i_bound = 9;
bool pin::has_i_bound() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void pin::set_has_i_bound() {
  _has_bits_[0] |= 0x00000004u;
}
void pin::clear_has_i_bound() {
  _has_bits_[0] &= ~0x00000004u;
}
void pin::clear_i_bound() {
  if (i_bound_ != NULL) i_bound_->::Electronics::bounds::Clear();
  clear_has_i_bound();
}
const ::Electronics::bounds& pin::i_bound() const {
  // @@protoc_insertion_point(field_get:Electronics.pin.i_bound)
  return i_bound_ != NULL ? *i_bound_
                         : *::Electronics::bounds::internal_default_instance();
}
::Electronics::bounds* pin::mutable_i_bound() {
  set_has_i_bound();
  if (i_bound_ == NULL) {
    i_bound_ = new ::Electronics::bounds;
  }
  // @@protoc_insertion_point(field_mutable:Electronics.pin.i_bound)
  return i_bound_;
}
::Electronics::bounds* pin::release_i_bound() {
  // @@protoc_insertion_point(field_release:Electronics.pin.i_bound)
  clear_has_i_bound();
  ::Electronics::bounds* temp = i_bound_;
  i_bound_ = NULL;
  return temp;
}
void pin::set_allocated_i_bound(::Electronics::bounds* i_bound) {
  delete i_bound_;
  i_bound_ = i_bound;
  if (i_bound) {
    set_has_i_bound();
  } else {
    clear_has_i_bound();
  }
  // @@protoc_insertion_point(field_set_allocated:Electronics.pin.i_bound)
}

// required .Electronics.dependence dependents = 10;
bool pin::has_dependents() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void pin::set_has_dependents() {
  _has_bits_[0] |= 0x00000008u;
}
void pin::clear_has_dependents() {
  _has_bits_[0] &= ~0x00000008u;
}
void pin::clear_dependents() {
  if (dependents_ != NULL) dependents_->::Electronics::dependence::Clear();
  clear_has_dependents();
}
const ::Electronics::dependence& pin::dependents() const {
  // @@protoc_insertion_point(field_get:Electronics.pin.dependents)
  return dependents_ != NULL ? *dependents_
                         : *::Electronics::dependence::internal_default_instance();
}
::Electronics::dependence* pin::mutable_dependents() {
  set_has_dependents();
  if (dependents_ == NULL) {
    dependents_ = new ::Electronics::dependence;
  }
  // @@protoc_insertion_point(field_mutable:Electronics.pin.dependents)
  return dependents_;
}
::Electronics::dependence* pin::release_dependents() {
  // @@protoc_insertion_point(field_release:Electronics.pin.dependents)
  clear_has_dependents();
  ::Electronics::dependence* temp = dependents_;
  dependents_ = NULL;
  return temp;
}
void pin::set_allocated_dependents(::Electronics::dependence* dependents) {
  delete dependents_;
  dependents_ = dependents;
  if (dependents) {
    set_has_dependents();
  } else {
    clear_has_dependents();
  }
  // @@protoc_insertion_point(field_set_allocated:Electronics.pin.dependents)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int dependence::kOthersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

dependence::dependence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_component_5fstructure_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Electronics.dependence)
}
dependence::dependence(const dependence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      others_(from.others_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Electronics.dependence)
}

void dependence::SharedCtor() {
  _cached_size_ = 0;
}

dependence::~dependence() {
  // @@protoc_insertion_point(destructor:Electronics.dependence)
  SharedDtor();
}

void dependence::SharedDtor() {
}

void dependence::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* dependence::descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const dependence& dependence::default_instance() {
  protobuf_component_5fstructure_2eproto::InitDefaults();
  return *internal_default_instance();
}

dependence* dependence::New(::google::protobuf::Arena* arena) const {
  dependence* n = new dependence;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void dependence::Clear() {
// @@protoc_insertion_point(message_clear_start:Electronics.dependence)
  others_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool dependence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Electronics.dependence)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string others = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_others()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->others(this->others_size() - 1).data(),
            this->others(this->others_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Electronics.dependence.others");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Electronics.dependence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Electronics.dependence)
  return false;
#undef DO_
}

void dependence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Electronics.dependence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string others = 1;
  for (int i = 0, n = this->others_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->others(i).data(), this->others(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Electronics.dependence.others");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->others(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Electronics.dependence)
}

::google::protobuf::uint8* dependence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Electronics.dependence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string others = 1;
  for (int i = 0, n = this->others_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->others(i).data(), this->others(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Electronics.dependence.others");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->others(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Electronics.dependence)
  return target;
}

size_t dependence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Electronics.dependence)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string others = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->others_size());
  for (int i = 0, n = this->others_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->others(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void dependence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Electronics.dependence)
  GOOGLE_DCHECK_NE(&from, this);
  const dependence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const dependence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Electronics.dependence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Electronics.dependence)
    MergeFrom(*source);
  }
}

void dependence::MergeFrom(const dependence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Electronics.dependence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  others_.MergeFrom(from.others_);
}

void dependence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Electronics.dependence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void dependence::CopyFrom(const dependence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Electronics.dependence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool dependence::IsInitialized() const {
  return true;
}

void dependence::Swap(dependence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void dependence::InternalSwap(dependence* other) {
  others_.InternalSwap(&other->others_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata dependence::GetMetadata() const {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// dependence

// repeated string others = 1;
int dependence::others_size() const {
  return others_.size();
}
void dependence::clear_others() {
  others_.Clear();
}
const ::std::string& dependence::others(int index) const {
  // @@protoc_insertion_point(field_get:Electronics.dependence.others)
  return others_.Get(index);
}
::std::string* dependence::mutable_others(int index) {
  // @@protoc_insertion_point(field_mutable:Electronics.dependence.others)
  return others_.Mutable(index);
}
void dependence::set_others(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Electronics.dependence.others)
  others_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void dependence::set_others(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Electronics.dependence.others)
  others_.Mutable(index)->assign(std::move(value));
}
#endif
void dependence::set_others(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  others_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Electronics.dependence.others)
}
void dependence::set_others(int index, const char* value, size_t size) {
  others_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Electronics.dependence.others)
}
::std::string* dependence::add_others() {
  // @@protoc_insertion_point(field_add_mutable:Electronics.dependence.others)
  return others_.Add();
}
void dependence::add_others(const ::std::string& value) {
  others_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Electronics.dependence.others)
}
#if LANG_CXX11
void dependence::add_others(::std::string&& value) {
  others_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Electronics.dependence.others)
}
#endif
void dependence::add_others(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  others_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Electronics.dependence.others)
}
void dependence::add_others(const char* value, size_t size) {
  others_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Electronics.dependence.others)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
dependence::others() const {
  // @@protoc_insertion_point(field_list:Electronics.dependence.others)
  return others_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
dependence::mutable_others() {
  // @@protoc_insertion_point(field_mutable_list:Electronics.dependence.others)
  return &others_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Component::kComponentNameFieldNumber;
const int Component::kComponentTypeFieldNumber;
const int Component::kComponentClassFieldNumber;
const int Component::kPinFieldNumber;
const int Component::kNonlinFieldNumber;
const int Component::kSizeFieldNumber;
const int Component::kWeightFieldNumber;
const int Component::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Component::Component()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_component_5fstructure_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Electronics.Component)
}
Component::Component(const Component& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pin_(from.pin_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _extensions_.MergeFrom(from._extensions_);
  component_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_component_name()) {
    component_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.component_name_);
  }
  component_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_component_type()) {
    component_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.component_type_);
  }
  component_class_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_component_class()) {
    component_class_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.component_class_);
  }
  if (from.has_size()) {
    size_ = new ::Electronics::bbox(*from.size_);
  } else {
    size_ = NULL;
  }
  ::memcpy(&weight_, &from.weight_,
    reinterpret_cast<char*>(&nonlin_) -
    reinterpret_cast<char*>(&weight_) + sizeof(nonlin_));
  // @@protoc_insertion_point(copy_constructor:Electronics.Component)
}

void Component::SharedCtor() {
  _cached_size_ = 0;
  component_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  component_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  component_class_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, reinterpret_cast<char*>(&nonlin_) -
    reinterpret_cast<char*>(&size_) + sizeof(nonlin_));
}

Component::~Component() {
  // @@protoc_insertion_point(destructor:Electronics.Component)
  SharedDtor();
}

void Component::SharedDtor() {
  component_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  component_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  component_class_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete size_;
  }
}

void Component::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Component::descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Component& Component::default_instance() {
  protobuf_component_5fstructure_2eproto::InitDefaults();
  return *internal_default_instance();
}

Component* Component::New(::google::protobuf::Arena* arena) const {
  Component* n = new Component;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Component::Clear() {
// @@protoc_insertion_point(message_clear_start:Electronics.Component)
  _extensions_.Clear();
  pin_.Clear();
  if (_has_bits_[0 / 32] & 15u) {
    if (has_component_name()) {
      GOOGLE_DCHECK(!component_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*component_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_component_type()) {
      GOOGLE_DCHECK(!component_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*component_type_.UnsafeRawStringPointer())->clear();
    }
    if (has_component_class()) {
      GOOGLE_DCHECK(!component_class_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*component_class_.UnsafeRawStringPointer())->clear();
    }
    if (has_size()) {
      GOOGLE_DCHECK(size_ != NULL);
      size_->::Electronics::bbox::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 112u) {
    ::memset(&weight_, 0, reinterpret_cast<char*>(&nonlin_) -
      reinterpret_cast<char*>(&weight_) + sizeof(nonlin_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Component::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Electronics.Component)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string component_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_component_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->component_name().data(), this->component_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Electronics.Component.component_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string component_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_component_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->component_type().data(), this->component_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Electronics.Component.component_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string component_class = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_component_class()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->component_class().data(), this->component_class().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Electronics.Component.component_class");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Electronics.pin pin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool nonlin = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_nonlin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &nonlin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Electronics.bbox size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_size()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double weight = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_weight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double price = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((800u <= tag && tag < 1608u)) {
          DO_(_extensions_.ParseField(tag, input, internal_default_instance(),
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Electronics.Component)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Electronics.Component)
  return false;
#undef DO_
}

void Component::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Electronics.Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string component_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->component_name().data(), this->component_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Electronics.Component.component_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->component_name(), output);
  }

  // required string component_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->component_type().data(), this->component_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Electronics.Component.component_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->component_type(), output);
  }

  // required string component_class = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->component_class().data(), this->component_class().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Electronics.Component.component_class");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->component_class(), output);
  }

  // repeated .Electronics.pin pin = 4;
  for (unsigned int i = 0, n = this->pin_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->pin(i), output);
  }

  // required bool nonlin = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->nonlin(), output);
  }

  // required .Electronics.bbox size = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->size_, output);
  }

  // required double weight = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->weight(), output);
  }

  // required double price = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->price(), output);
  }

  // Extension range [100, 201)
  _extensions_.SerializeWithCachedSizes(
      100, 201, output);

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Electronics.Component)
}

::google::protobuf::uint8* Component::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Electronics.Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string component_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->component_name().data(), this->component_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Electronics.Component.component_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->component_name(), target);
  }

  // required string component_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->component_type().data(), this->component_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Electronics.Component.component_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->component_type(), target);
  }

  // required string component_class = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->component_class().data(), this->component_class().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Electronics.Component.component_class");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->component_class(), target);
  }

  // repeated .Electronics.pin pin = 4;
  for (unsigned int i = 0, n = this->pin_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->pin(i), deterministic, target);
  }

  // required bool nonlin = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->nonlin(), target);
  }

  // required .Electronics.bbox size = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->size_, deterministic, target);
  }

  // required double weight = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->weight(), target);
  }

  // required double price = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->price(), target);
  }

  // Extension range [100, 201)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      100, 201, deterministic, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Electronics.Component)
  return target;
}

size_t Component::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Electronics.Component)
  size_t total_size = 0;

  if (has_component_name()) {
    // required string component_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->component_name());
  }

  if (has_component_type()) {
    // required string component_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->component_type());
  }

  if (has_component_class()) {
    // required string component_class = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->component_class());
  }

  if (has_size()) {
    // required .Electronics.bbox size = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->size_);
  }

  if (has_weight()) {
    // required double weight = 7;
    total_size += 1 + 8;
  }

  if (has_price()) {
    // required double price = 8;
    total_size += 1 + 8;
  }

  if (has_nonlin()) {
    // required bool nonlin = 5;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t Component::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Electronics.Component)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required string component_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->component_name());

    // required string component_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->component_type());

    // required string component_class = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->component_class());

    // required .Electronics.bbox size = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->size_);

    // required double weight = 7;
    total_size += 1 + 8;

    // required double price = 8;
    total_size += 1 + 8;

    // required bool nonlin = 5;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .Electronics.pin pin = 4;
  {
    unsigned int count = this->pin_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pin(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Component::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Electronics.Component)
  GOOGLE_DCHECK_NE(&from, this);
  const Component* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Component>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Electronics.Component)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Electronics.Component)
    MergeFrom(*source);
  }
}

void Component::MergeFrom(const Component& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Electronics.Component)
  GOOGLE_DCHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pin_.MergeFrom(from.pin_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_component_name();
      component_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.component_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_component_type();
      component_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.component_type_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_component_class();
      component_class_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.component_class_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_size()->::Electronics::bbox::MergeFrom(from.size());
    }
    if (cached_has_bits & 0x00000010u) {
      weight_ = from.weight_;
    }
    if (cached_has_bits & 0x00000020u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000040u) {
      nonlin_ = from.nonlin_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Component::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Electronics.Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Component::CopyFrom(const Component& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Electronics.Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Component::IsInitialized() const {
  if (!_extensions_.IsInitialized()) {
    return false;
  }

  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->pin())) return false;
  if (has_size()) {
    if (!this->size_->IsInitialized()) return false;
  }
  return true;
}

void Component::Swap(Component* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Component::InternalSwap(Component* other) {
  pin_.InternalSwap(&other->pin_);
  component_name_.Swap(&other->component_name_);
  component_type_.Swap(&other->component_type_);
  component_class_.Swap(&other->component_class_);
  std::swap(size_, other->size_);
  std::swap(weight_, other->weight_);
  std::swap(price_, other->price_);
  std::swap(nonlin_, other->nonlin_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata Component::GetMetadata() const {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Component

// required string component_name = 1;
bool Component::has_component_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Component::set_has_component_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Component::clear_has_component_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Component::clear_component_name() {
  component_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_component_name();
}
const ::std::string& Component::component_name() const {
  // @@protoc_insertion_point(field_get:Electronics.Component.component_name)
  return component_name_.GetNoArena();
}
void Component::set_component_name(const ::std::string& value) {
  set_has_component_name();
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Electronics.Component.component_name)
}
#if LANG_CXX11
void Component::set_component_name(::std::string&& value) {
  set_has_component_name();
  component_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Electronics.Component.component_name)
}
#endif
void Component::set_component_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_component_name();
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Electronics.Component.component_name)
}
void Component::set_component_name(const char* value, size_t size) {
  set_has_component_name();
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Electronics.Component.component_name)
}
::std::string* Component::mutable_component_name() {
  set_has_component_name();
  // @@protoc_insertion_point(field_mutable:Electronics.Component.component_name)
  return component_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Component::release_component_name() {
  // @@protoc_insertion_point(field_release:Electronics.Component.component_name)
  clear_has_component_name();
  return component_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Component::set_allocated_component_name(::std::string* component_name) {
  if (component_name != NULL) {
    set_has_component_name();
  } else {
    clear_has_component_name();
  }
  component_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), component_name);
  // @@protoc_insertion_point(field_set_allocated:Electronics.Component.component_name)
}

// required string component_type = 2;
bool Component::has_component_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Component::set_has_component_type() {
  _has_bits_[0] |= 0x00000002u;
}
void Component::clear_has_component_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void Component::clear_component_type() {
  component_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_component_type();
}
const ::std::string& Component::component_type() const {
  // @@protoc_insertion_point(field_get:Electronics.Component.component_type)
  return component_type_.GetNoArena();
}
void Component::set_component_type(const ::std::string& value) {
  set_has_component_type();
  component_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Electronics.Component.component_type)
}
#if LANG_CXX11
void Component::set_component_type(::std::string&& value) {
  set_has_component_type();
  component_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Electronics.Component.component_type)
}
#endif
void Component::set_component_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_component_type();
  component_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Electronics.Component.component_type)
}
void Component::set_component_type(const char* value, size_t size) {
  set_has_component_type();
  component_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Electronics.Component.component_type)
}
::std::string* Component::mutable_component_type() {
  set_has_component_type();
  // @@protoc_insertion_point(field_mutable:Electronics.Component.component_type)
  return component_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Component::release_component_type() {
  // @@protoc_insertion_point(field_release:Electronics.Component.component_type)
  clear_has_component_type();
  return component_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Component::set_allocated_component_type(::std::string* component_type) {
  if (component_type != NULL) {
    set_has_component_type();
  } else {
    clear_has_component_type();
  }
  component_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), component_type);
  // @@protoc_insertion_point(field_set_allocated:Electronics.Component.component_type)
}

// required string component_class = 3;
bool Component::has_component_class() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Component::set_has_component_class() {
  _has_bits_[0] |= 0x00000004u;
}
void Component::clear_has_component_class() {
  _has_bits_[0] &= ~0x00000004u;
}
void Component::clear_component_class() {
  component_class_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_component_class();
}
const ::std::string& Component::component_class() const {
  // @@protoc_insertion_point(field_get:Electronics.Component.component_class)
  return component_class_.GetNoArena();
}
void Component::set_component_class(const ::std::string& value) {
  set_has_component_class();
  component_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Electronics.Component.component_class)
}
#if LANG_CXX11
void Component::set_component_class(::std::string&& value) {
  set_has_component_class();
  component_class_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Electronics.Component.component_class)
}
#endif
void Component::set_component_class(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_component_class();
  component_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Electronics.Component.component_class)
}
void Component::set_component_class(const char* value, size_t size) {
  set_has_component_class();
  component_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Electronics.Component.component_class)
}
::std::string* Component::mutable_component_class() {
  set_has_component_class();
  // @@protoc_insertion_point(field_mutable:Electronics.Component.component_class)
  return component_class_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Component::release_component_class() {
  // @@protoc_insertion_point(field_release:Electronics.Component.component_class)
  clear_has_component_class();
  return component_class_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Component::set_allocated_component_class(::std::string* component_class) {
  if (component_class != NULL) {
    set_has_component_class();
  } else {
    clear_has_component_class();
  }
  component_class_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), component_class);
  // @@protoc_insertion_point(field_set_allocated:Electronics.Component.component_class)
}

// repeated .Electronics.pin pin = 4;
int Component::pin_size() const {
  return pin_.size();
}
void Component::clear_pin() {
  pin_.Clear();
}
const ::Electronics::pin& Component::pin(int index) const {
  // @@protoc_insertion_point(field_get:Electronics.Component.pin)
  return pin_.Get(index);
}
::Electronics::pin* Component::mutable_pin(int index) {
  // @@protoc_insertion_point(field_mutable:Electronics.Component.pin)
  return pin_.Mutable(index);
}
::Electronics::pin* Component::add_pin() {
  // @@protoc_insertion_point(field_add:Electronics.Component.pin)
  return pin_.Add();
}
::google::protobuf::RepeatedPtrField< ::Electronics::pin >*
Component::mutable_pin() {
  // @@protoc_insertion_point(field_mutable_list:Electronics.Component.pin)
  return &pin_;
}
const ::google::protobuf::RepeatedPtrField< ::Electronics::pin >&
Component::pin() const {
  // @@protoc_insertion_point(field_list:Electronics.Component.pin)
  return pin_;
}

// required bool nonlin = 5;
bool Component::has_nonlin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Component::set_has_nonlin() {
  _has_bits_[0] |= 0x00000040u;
}
void Component::clear_has_nonlin() {
  _has_bits_[0] &= ~0x00000040u;
}
void Component::clear_nonlin() {
  nonlin_ = false;
  clear_has_nonlin();
}
bool Component::nonlin() const {
  // @@protoc_insertion_point(field_get:Electronics.Component.nonlin)
  return nonlin_;
}
void Component::set_nonlin(bool value) {
  set_has_nonlin();
  nonlin_ = value;
  // @@protoc_insertion_point(field_set:Electronics.Component.nonlin)
}

// required .Electronics.bbox size = 6;
bool Component::has_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Component::set_has_size() {
  _has_bits_[0] |= 0x00000008u;
}
void Component::clear_has_size() {
  _has_bits_[0] &= ~0x00000008u;
}
void Component::clear_size() {
  if (size_ != NULL) size_->::Electronics::bbox::Clear();
  clear_has_size();
}
const ::Electronics::bbox& Component::size() const {
  // @@protoc_insertion_point(field_get:Electronics.Component.size)
  return size_ != NULL ? *size_
                         : *::Electronics::bbox::internal_default_instance();
}
::Electronics::bbox* Component::mutable_size() {
  set_has_size();
  if (size_ == NULL) {
    size_ = new ::Electronics::bbox;
  }
  // @@protoc_insertion_point(field_mutable:Electronics.Component.size)
  return size_;
}
::Electronics::bbox* Component::release_size() {
  // @@protoc_insertion_point(field_release:Electronics.Component.size)
  clear_has_size();
  ::Electronics::bbox* temp = size_;
  size_ = NULL;
  return temp;
}
void Component::set_allocated_size(::Electronics::bbox* size) {
  delete size_;
  size_ = size;
  if (size) {
    set_has_size();
  } else {
    clear_has_size();
  }
  // @@protoc_insertion_point(field_set_allocated:Electronics.Component.size)
}

// required double weight = 7;
bool Component::has_weight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Component::set_has_weight() {
  _has_bits_[0] |= 0x00000010u;
}
void Component::clear_has_weight() {
  _has_bits_[0] &= ~0x00000010u;
}
void Component::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
double Component::weight() const {
  // @@protoc_insertion_point(field_get:Electronics.Component.weight)
  return weight_;
}
void Component::set_weight(double value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:Electronics.Component.weight)
}

// required double price = 8;
bool Component::has_price() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Component::set_has_price() {
  _has_bits_[0] |= 0x00000020u;
}
void Component::clear_has_price() {
  _has_bits_[0] &= ~0x00000020u;
}
void Component::clear_price() {
  price_ = 0;
  clear_has_price();
}
double Component::price() const {
  // @@protoc_insertion_point(field_get:Electronics.Component.price)
  return price_;
}
void Component::set_price(double value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:Electronics.Component.price)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Motor::kKtFieldNumber;
const int Motor::kKeFieldNumber;
const int Motor::kRFieldNumber;
const int Motor::kVinFieldNumber;
const int Motor::kIFieldNumber;
const int Motor::kTorqFieldNumber;
const int Motor::kVelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Motor::Motor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_component_5fstructure_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Electronics.Motor)
}
Motor::Motor(const Motor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&kt_, &from.kt_,
    reinterpret_cast<char*>(&vel_) -
    reinterpret_cast<char*>(&kt_) + sizeof(vel_));
  // @@protoc_insertion_point(copy_constructor:Electronics.Motor)
}

void Motor::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&kt_, 0, reinterpret_cast<char*>(&vel_) -
    reinterpret_cast<char*>(&kt_) + sizeof(vel_));
}

Motor::~Motor() {
  // @@protoc_insertion_point(destructor:Electronics.Motor)
  SharedDtor();
}

void Motor::SharedDtor() {
}

void Motor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Motor::descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Motor& Motor::default_instance() {
  protobuf_component_5fstructure_2eproto::InitDefaults();
  return *internal_default_instance();
}

Motor* Motor::New(::google::protobuf::Arena* arena) const {
  Motor* n = new Motor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Motor::Clear() {
// @@protoc_insertion_point(message_clear_start:Electronics.Motor)
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&kt_, 0, reinterpret_cast<char*>(&vel_) -
      reinterpret_cast<char*>(&kt_) + sizeof(vel_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Motor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Electronics.Motor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double kt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_kt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &kt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ke = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_ke();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ke_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double r = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_r();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_vin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double i = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_i();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double torq = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_torq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &torq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vel = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_vel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Electronics.Motor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Electronics.Motor)
  return false;
#undef DO_
}

void Motor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Electronics.Motor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double kt = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->kt(), output);
  }

  // optional double ke = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ke(), output);
  }

  // optional double r = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->r(), output);
  }

  // optional double vin = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->vin(), output);
  }

  // optional double i = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->i(), output);
  }

  // optional double torq = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->torq(), output);
  }

  // optional double vel = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->vel(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Electronics.Motor)
}

::google::protobuf::uint8* Motor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Electronics.Motor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double kt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->kt(), target);
  }

  // optional double ke = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->ke(), target);
  }

  // optional double r = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->r(), target);
  }

  // optional double vin = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->vin(), target);
  }

  // optional double i = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->i(), target);
  }

  // optional double torq = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->torq(), target);
  }

  // optional double vel = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->vel(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Electronics.Motor)
  return target;
}

size_t Motor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Electronics.Motor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional double kt = 1;
    if (has_kt()) {
      total_size += 1 + 8;
    }

    // optional double ke = 2;
    if (has_ke()) {
      total_size += 1 + 8;
    }

    // optional double r = 3;
    if (has_r()) {
      total_size += 1 + 8;
    }

    // optional double vin = 4;
    if (has_vin()) {
      total_size += 1 + 8;
    }

    // optional double i = 5;
    if (has_i()) {
      total_size += 1 + 8;
    }

    // optional double torq = 6;
    if (has_torq()) {
      total_size += 1 + 8;
    }

    // optional double vel = 7;
    if (has_vel()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Motor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Electronics.Motor)
  GOOGLE_DCHECK_NE(&from, this);
  const Motor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Motor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Electronics.Motor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Electronics.Motor)
    MergeFrom(*source);
  }
}

void Motor::MergeFrom(const Motor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Electronics.Motor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      kt_ = from.kt_;
    }
    if (cached_has_bits & 0x00000002u) {
      ke_ = from.ke_;
    }
    if (cached_has_bits & 0x00000004u) {
      r_ = from.r_;
    }
    if (cached_has_bits & 0x00000008u) {
      vin_ = from.vin_;
    }
    if (cached_has_bits & 0x00000010u) {
      i_ = from.i_;
    }
    if (cached_has_bits & 0x00000020u) {
      torq_ = from.torq_;
    }
    if (cached_has_bits & 0x00000040u) {
      vel_ = from.vel_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Motor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Electronics.Motor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Motor::CopyFrom(const Motor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Electronics.Motor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Motor::IsInitialized() const {
  return true;
}

void Motor::Swap(Motor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Motor::InternalSwap(Motor* other) {
  std::swap(kt_, other->kt_);
  std::swap(ke_, other->ke_);
  std::swap(r_, other->r_);
  std::swap(vin_, other->vin_);
  std::swap(i_, other->i_);
  std::swap(torq_, other->torq_);
  std::swap(vel_, other->vel_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Motor::GetMetadata() const {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Motor

// optional double kt = 1;
bool Motor::has_kt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Motor::set_has_kt() {
  _has_bits_[0] |= 0x00000001u;
}
void Motor::clear_has_kt() {
  _has_bits_[0] &= ~0x00000001u;
}
void Motor::clear_kt() {
  kt_ = 0;
  clear_has_kt();
}
double Motor::kt() const {
  // @@protoc_insertion_point(field_get:Electronics.Motor.kt)
  return kt_;
}
void Motor::set_kt(double value) {
  set_has_kt();
  kt_ = value;
  // @@protoc_insertion_point(field_set:Electronics.Motor.kt)
}

// optional double ke = 2;
bool Motor::has_ke() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Motor::set_has_ke() {
  _has_bits_[0] |= 0x00000002u;
}
void Motor::clear_has_ke() {
  _has_bits_[0] &= ~0x00000002u;
}
void Motor::clear_ke() {
  ke_ = 0;
  clear_has_ke();
}
double Motor::ke() const {
  // @@protoc_insertion_point(field_get:Electronics.Motor.ke)
  return ke_;
}
void Motor::set_ke(double value) {
  set_has_ke();
  ke_ = value;
  // @@protoc_insertion_point(field_set:Electronics.Motor.ke)
}

// optional double r = 3;
bool Motor::has_r() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Motor::set_has_r() {
  _has_bits_[0] |= 0x00000004u;
}
void Motor::clear_has_r() {
  _has_bits_[0] &= ~0x00000004u;
}
void Motor::clear_r() {
  r_ = 0;
  clear_has_r();
}
double Motor::r() const {
  // @@protoc_insertion_point(field_get:Electronics.Motor.r)
  return r_;
}
void Motor::set_r(double value) {
  set_has_r();
  r_ = value;
  // @@protoc_insertion_point(field_set:Electronics.Motor.r)
}

// optional double vin = 4;
bool Motor::has_vin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Motor::set_has_vin() {
  _has_bits_[0] |= 0x00000008u;
}
void Motor::clear_has_vin() {
  _has_bits_[0] &= ~0x00000008u;
}
void Motor::clear_vin() {
  vin_ = 0;
  clear_has_vin();
}
double Motor::vin() const {
  // @@protoc_insertion_point(field_get:Electronics.Motor.vin)
  return vin_;
}
void Motor::set_vin(double value) {
  set_has_vin();
  vin_ = value;
  // @@protoc_insertion_point(field_set:Electronics.Motor.vin)
}

// optional double i = 5;
bool Motor::has_i() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Motor::set_has_i() {
  _has_bits_[0] |= 0x00000010u;
}
void Motor::clear_has_i() {
  _has_bits_[0] &= ~0x00000010u;
}
void Motor::clear_i() {
  i_ = 0;
  clear_has_i();
}
double Motor::i() const {
  // @@protoc_insertion_point(field_get:Electronics.Motor.i)
  return i_;
}
void Motor::set_i(double value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:Electronics.Motor.i)
}

// optional double torq = 6;
bool Motor::has_torq() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Motor::set_has_torq() {
  _has_bits_[0] |= 0x00000020u;
}
void Motor::clear_has_torq() {
  _has_bits_[0] &= ~0x00000020u;
}
void Motor::clear_torq() {
  torq_ = 0;
  clear_has_torq();
}
double Motor::torq() const {
  // @@protoc_insertion_point(field_get:Electronics.Motor.torq)
  return torq_;
}
void Motor::set_torq(double value) {
  set_has_torq();
  torq_ = value;
  // @@protoc_insertion_point(field_set:Electronics.Motor.torq)
}

// optional double vel = 7;
bool Motor::has_vel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Motor::set_has_vel() {
  _has_bits_[0] |= 0x00000040u;
}
void Motor::clear_has_vel() {
  _has_bits_[0] &= ~0x00000040u;
}
void Motor::clear_vel() {
  vel_ = 0;
  clear_has_vel();
}
double Motor::vel() const {
  // @@protoc_insertion_point(field_get:Electronics.Motor.vel)
  return vel_;
}
void Motor::set_vel(double value) {
  set_has_vel();
  vel_ = value;
  // @@protoc_insertion_point(field_set:Electronics.Motor.vel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Voltage_Regulator::kConsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Voltage_Regulator::Voltage_Regulator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_component_5fstructure_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Electronics.Voltage_Regulator)
}
Voltage_Regulator::Voltage_Regulator(const Voltage_Regulator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      cons_(from.cons_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Electronics.Voltage_Regulator)
}

void Voltage_Regulator::SharedCtor() {
  _cached_size_ = 0;
}

Voltage_Regulator::~Voltage_Regulator() {
  // @@protoc_insertion_point(destructor:Electronics.Voltage_Regulator)
  SharedDtor();
}

void Voltage_Regulator::SharedDtor() {
}

void Voltage_Regulator::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Voltage_Regulator::descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Voltage_Regulator& Voltage_Regulator::default_instance() {
  protobuf_component_5fstructure_2eproto::InitDefaults();
  return *internal_default_instance();
}

Voltage_Regulator* Voltage_Regulator::New(::google::protobuf::Arena* arena) const {
  Voltage_Regulator* n = new Voltage_Regulator;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Voltage_Regulator::Clear() {
// @@protoc_insertion_point(message_clear_start:Electronics.Voltage_Regulator)
  cons_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Voltage_Regulator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Electronics.Voltage_Regulator)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Electronics.lin_cons cons = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cons()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Electronics.Voltage_Regulator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Electronics.Voltage_Regulator)
  return false;
#undef DO_
}

void Voltage_Regulator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Electronics.Voltage_Regulator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Electronics.lin_cons cons = 1;
  for (unsigned int i = 0, n = this->cons_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cons(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Electronics.Voltage_Regulator)
}

::google::protobuf::uint8* Voltage_Regulator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Electronics.Voltage_Regulator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Electronics.lin_cons cons = 1;
  for (unsigned int i = 0, n = this->cons_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->cons(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Electronics.Voltage_Regulator)
  return target;
}

size_t Voltage_Regulator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Electronics.Voltage_Regulator)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .Electronics.lin_cons cons = 1;
  {
    unsigned int count = this->cons_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cons(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Voltage_Regulator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Electronics.Voltage_Regulator)
  GOOGLE_DCHECK_NE(&from, this);
  const Voltage_Regulator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Voltage_Regulator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Electronics.Voltage_Regulator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Electronics.Voltage_Regulator)
    MergeFrom(*source);
  }
}

void Voltage_Regulator::MergeFrom(const Voltage_Regulator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Electronics.Voltage_Regulator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cons_.MergeFrom(from.cons_);
}

void Voltage_Regulator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Electronics.Voltage_Regulator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Voltage_Regulator::CopyFrom(const Voltage_Regulator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Electronics.Voltage_Regulator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Voltage_Regulator::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->cons())) return false;
  return true;
}

void Voltage_Regulator::Swap(Voltage_Regulator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Voltage_Regulator::InternalSwap(Voltage_Regulator* other) {
  cons_.InternalSwap(&other->cons_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Voltage_Regulator::GetMetadata() const {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Voltage_Regulator

// repeated .Electronics.lin_cons cons = 1;
int Voltage_Regulator::cons_size() const {
  return cons_.size();
}
void Voltage_Regulator::clear_cons() {
  cons_.Clear();
}
const ::Electronics::lin_cons& Voltage_Regulator::cons(int index) const {
  // @@protoc_insertion_point(field_get:Electronics.Voltage_Regulator.cons)
  return cons_.Get(index);
}
::Electronics::lin_cons* Voltage_Regulator::mutable_cons(int index) {
  // @@protoc_insertion_point(field_mutable:Electronics.Voltage_Regulator.cons)
  return cons_.Mutable(index);
}
::Electronics::lin_cons* Voltage_Regulator::add_cons() {
  // @@protoc_insertion_point(field_add:Electronics.Voltage_Regulator.cons)
  return cons_.Add();
}
::google::protobuf::RepeatedPtrField< ::Electronics::lin_cons >*
Voltage_Regulator::mutable_cons() {
  // @@protoc_insertion_point(field_mutable_list:Electronics.Voltage_Regulator.cons)
  return &cons_;
}
const ::google::protobuf::RepeatedPtrField< ::Electronics::lin_cons >&
Voltage_Regulator::cons() const {
  // @@protoc_insertion_point(field_list:Electronics.Voltage_Regulator.cons)
  return cons_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int H_Bridge::kLogicLevelFieldNumber;
const int H_Bridge::kLinearConsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

H_Bridge::H_Bridge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_component_5fstructure_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Electronics.H_Bridge)
}
H_Bridge::H_Bridge(const H_Bridge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      linear_cons_(from.linear_cons_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logic_level()) {
    logic_level_ = new ::Electronics::bounds(*from.logic_level_);
  } else {
    logic_level_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Electronics.H_Bridge)
}

void H_Bridge::SharedCtor() {
  _cached_size_ = 0;
  logic_level_ = NULL;
}

H_Bridge::~H_Bridge() {
  // @@protoc_insertion_point(destructor:Electronics.H_Bridge)
  SharedDtor();
}

void H_Bridge::SharedDtor() {
  if (this != internal_default_instance()) {
    delete logic_level_;
  }
}

void H_Bridge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* H_Bridge::descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const H_Bridge& H_Bridge::default_instance() {
  protobuf_component_5fstructure_2eproto::InitDefaults();
  return *internal_default_instance();
}

H_Bridge* H_Bridge::New(::google::protobuf::Arena* arena) const {
  H_Bridge* n = new H_Bridge;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void H_Bridge::Clear() {
// @@protoc_insertion_point(message_clear_start:Electronics.H_Bridge)
  linear_cons_.Clear();
  if (has_logic_level()) {
    GOOGLE_DCHECK(logic_level_ != NULL);
    logic_level_->::Electronics::bounds::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool H_Bridge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Electronics.H_Bridge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Electronics.bounds logic_level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logic_level()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Electronics.lin_cons linear_cons = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_linear_cons()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Electronics.H_Bridge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Electronics.H_Bridge)
  return false;
#undef DO_
}

void H_Bridge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Electronics.H_Bridge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Electronics.bounds logic_level = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->logic_level_, output);
  }

  // repeated .Electronics.lin_cons linear_cons = 2;
  for (unsigned int i = 0, n = this->linear_cons_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->linear_cons(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Electronics.H_Bridge)
}

::google::protobuf::uint8* H_Bridge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Electronics.H_Bridge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Electronics.bounds logic_level = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->logic_level_, deterministic, target);
  }

  // repeated .Electronics.lin_cons linear_cons = 2;
  for (unsigned int i = 0, n = this->linear_cons_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->linear_cons(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Electronics.H_Bridge)
  return target;
}

size_t H_Bridge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Electronics.H_Bridge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .Electronics.lin_cons linear_cons = 2;
  {
    unsigned int count = this->linear_cons_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->linear_cons(i));
    }
  }

  // optional .Electronics.bounds logic_level = 1;
  if (has_logic_level()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->logic_level_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void H_Bridge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Electronics.H_Bridge)
  GOOGLE_DCHECK_NE(&from, this);
  const H_Bridge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const H_Bridge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Electronics.H_Bridge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Electronics.H_Bridge)
    MergeFrom(*source);
  }
}

void H_Bridge::MergeFrom(const H_Bridge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Electronics.H_Bridge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  linear_cons_.MergeFrom(from.linear_cons_);
  if (from.has_logic_level()) {
    mutable_logic_level()->::Electronics::bounds::MergeFrom(from.logic_level());
  }
}

void H_Bridge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Electronics.H_Bridge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void H_Bridge::CopyFrom(const H_Bridge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Electronics.H_Bridge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool H_Bridge::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->linear_cons())) return false;
  if (has_logic_level()) {
    if (!this->logic_level_->IsInitialized()) return false;
  }
  return true;
}

void H_Bridge::Swap(H_Bridge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void H_Bridge::InternalSwap(H_Bridge* other) {
  linear_cons_.InternalSwap(&other->linear_cons_);
  std::swap(logic_level_, other->logic_level_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata H_Bridge::GetMetadata() const {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// H_Bridge

// optional .Electronics.bounds logic_level = 1;
bool H_Bridge::has_logic_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void H_Bridge::set_has_logic_level() {
  _has_bits_[0] |= 0x00000001u;
}
void H_Bridge::clear_has_logic_level() {
  _has_bits_[0] &= ~0x00000001u;
}
void H_Bridge::clear_logic_level() {
  if (logic_level_ != NULL) logic_level_->::Electronics::bounds::Clear();
  clear_has_logic_level();
}
const ::Electronics::bounds& H_Bridge::logic_level() const {
  // @@protoc_insertion_point(field_get:Electronics.H_Bridge.logic_level)
  return logic_level_ != NULL ? *logic_level_
                         : *::Electronics::bounds::internal_default_instance();
}
::Electronics::bounds* H_Bridge::mutable_logic_level() {
  set_has_logic_level();
  if (logic_level_ == NULL) {
    logic_level_ = new ::Electronics::bounds;
  }
  // @@protoc_insertion_point(field_mutable:Electronics.H_Bridge.logic_level)
  return logic_level_;
}
::Electronics::bounds* H_Bridge::release_logic_level() {
  // @@protoc_insertion_point(field_release:Electronics.H_Bridge.logic_level)
  clear_has_logic_level();
  ::Electronics::bounds* temp = logic_level_;
  logic_level_ = NULL;
  return temp;
}
void H_Bridge::set_allocated_logic_level(::Electronics::bounds* logic_level) {
  delete logic_level_;
  logic_level_ = logic_level;
  if (logic_level) {
    set_has_logic_level();
  } else {
    clear_has_logic_level();
  }
  // @@protoc_insertion_point(field_set_allocated:Electronics.H_Bridge.logic_level)
}

// repeated .Electronics.lin_cons linear_cons = 2;
int H_Bridge::linear_cons_size() const {
  return linear_cons_.size();
}
void H_Bridge::clear_linear_cons() {
  linear_cons_.Clear();
}
const ::Electronics::lin_cons& H_Bridge::linear_cons(int index) const {
  // @@protoc_insertion_point(field_get:Electronics.H_Bridge.linear_cons)
  return linear_cons_.Get(index);
}
::Electronics::lin_cons* H_Bridge::mutable_linear_cons(int index) {
  // @@protoc_insertion_point(field_mutable:Electronics.H_Bridge.linear_cons)
  return linear_cons_.Mutable(index);
}
::Electronics::lin_cons* H_Bridge::add_linear_cons() {
  // @@protoc_insertion_point(field_add:Electronics.H_Bridge.linear_cons)
  return linear_cons_.Add();
}
::google::protobuf::RepeatedPtrField< ::Electronics::lin_cons >*
H_Bridge::mutable_linear_cons() {
  // @@protoc_insertion_point(field_mutable_list:Electronics.H_Bridge.linear_cons)
  return &linear_cons_;
}
const ::google::protobuf::RepeatedPtrField< ::Electronics::lin_cons >&
H_Bridge::linear_cons() const {
  // @@protoc_insertion_point(field_list:Electronics.H_Bridge.linear_cons)
  return linear_cons_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Micro_Controller::kLogicLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Micro_Controller::Micro_Controller()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_component_5fstructure_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Electronics.Micro_Controller)
}
Micro_Controller::Micro_Controller(const Micro_Controller& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logic_level()) {
    logic_level_ = new ::Electronics::bounds(*from.logic_level_);
  } else {
    logic_level_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Electronics.Micro_Controller)
}

void Micro_Controller::SharedCtor() {
  _cached_size_ = 0;
  logic_level_ = NULL;
}

Micro_Controller::~Micro_Controller() {
  // @@protoc_insertion_point(destructor:Electronics.Micro_Controller)
  SharedDtor();
}

void Micro_Controller::SharedDtor() {
  if (this != internal_default_instance()) {
    delete logic_level_;
  }
}

void Micro_Controller::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Micro_Controller::descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Micro_Controller& Micro_Controller::default_instance() {
  protobuf_component_5fstructure_2eproto::InitDefaults();
  return *internal_default_instance();
}

Micro_Controller* Micro_Controller::New(::google::protobuf::Arena* arena) const {
  Micro_Controller* n = new Micro_Controller;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Micro_Controller::Clear() {
// @@protoc_insertion_point(message_clear_start:Electronics.Micro_Controller)
  if (has_logic_level()) {
    GOOGLE_DCHECK(logic_level_ != NULL);
    logic_level_->::Electronics::bounds::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Micro_Controller::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Electronics.Micro_Controller)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Electronics.bounds logic_level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logic_level()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Electronics.Micro_Controller)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Electronics.Micro_Controller)
  return false;
#undef DO_
}

void Micro_Controller::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Electronics.Micro_Controller)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Electronics.bounds logic_level = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->logic_level_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Electronics.Micro_Controller)
}

::google::protobuf::uint8* Micro_Controller::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Electronics.Micro_Controller)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Electronics.bounds logic_level = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->logic_level_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Electronics.Micro_Controller)
  return target;
}

size_t Micro_Controller::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Electronics.Micro_Controller)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .Electronics.bounds logic_level = 1;
  if (has_logic_level()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->logic_level_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Micro_Controller::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Electronics.Micro_Controller)
  GOOGLE_DCHECK_NE(&from, this);
  const Micro_Controller* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Micro_Controller>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Electronics.Micro_Controller)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Electronics.Micro_Controller)
    MergeFrom(*source);
  }
}

void Micro_Controller::MergeFrom(const Micro_Controller& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Electronics.Micro_Controller)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logic_level()) {
    mutable_logic_level()->::Electronics::bounds::MergeFrom(from.logic_level());
  }
}

void Micro_Controller::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Electronics.Micro_Controller)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Micro_Controller::CopyFrom(const Micro_Controller& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Electronics.Micro_Controller)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Micro_Controller::IsInitialized() const {
  if (has_logic_level()) {
    if (!this->logic_level_->IsInitialized()) return false;
  }
  return true;
}

void Micro_Controller::Swap(Micro_Controller* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Micro_Controller::InternalSwap(Micro_Controller* other) {
  std::swap(logic_level_, other->logic_level_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Micro_Controller::GetMetadata() const {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Micro_Controller

// optional .Electronics.bounds logic_level = 1;
bool Micro_Controller::has_logic_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Micro_Controller::set_has_logic_level() {
  _has_bits_[0] |= 0x00000001u;
}
void Micro_Controller::clear_has_logic_level() {
  _has_bits_[0] &= ~0x00000001u;
}
void Micro_Controller::clear_logic_level() {
  if (logic_level_ != NULL) logic_level_->::Electronics::bounds::Clear();
  clear_has_logic_level();
}
const ::Electronics::bounds& Micro_Controller::logic_level() const {
  // @@protoc_insertion_point(field_get:Electronics.Micro_Controller.logic_level)
  return logic_level_ != NULL ? *logic_level_
                         : *::Electronics::bounds::internal_default_instance();
}
::Electronics::bounds* Micro_Controller::mutable_logic_level() {
  set_has_logic_level();
  if (logic_level_ == NULL) {
    logic_level_ = new ::Electronics::bounds;
  }
  // @@protoc_insertion_point(field_mutable:Electronics.Micro_Controller.logic_level)
  return logic_level_;
}
::Electronics::bounds* Micro_Controller::release_logic_level() {
  // @@protoc_insertion_point(field_release:Electronics.Micro_Controller.logic_level)
  clear_has_logic_level();
  ::Electronics::bounds* temp = logic_level_;
  logic_level_ = NULL;
  return temp;
}
void Micro_Controller::set_allocated_logic_level(::Electronics::bounds* logic_level) {
  delete logic_level_;
  logic_level_ = logic_level;
  if (logic_level) {
    set_has_logic_level();
  } else {
    clear_has_logic_level();
  }
  // @@protoc_insertion_point(field_set_allocated:Electronics.Micro_Controller.logic_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Battery::kCapacityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Battery::Battery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_component_5fstructure_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Electronics.Battery)
}
Battery::Battery(const Battery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  capacity_ = from.capacity_;
  // @@protoc_insertion_point(copy_constructor:Electronics.Battery)
}

void Battery::SharedCtor() {
  _cached_size_ = 0;
  capacity_ = 0;
}

Battery::~Battery() {
  // @@protoc_insertion_point(destructor:Electronics.Battery)
  SharedDtor();
}

void Battery::SharedDtor() {
}

void Battery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Battery::descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Battery& Battery::default_instance() {
  protobuf_component_5fstructure_2eproto::InitDefaults();
  return *internal_default_instance();
}

Battery* Battery::New(::google::protobuf::Arena* arena) const {
  Battery* n = new Battery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Battery::Clear() {
// @@protoc_insertion_point(message_clear_start:Electronics.Battery)
  capacity_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Battery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Electronics.Battery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double capacity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_capacity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &capacity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Electronics.Battery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Electronics.Battery)
  return false;
#undef DO_
}

void Battery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Electronics.Battery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double capacity = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->capacity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Electronics.Battery)
}

::google::protobuf::uint8* Battery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Electronics.Battery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double capacity = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->capacity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Electronics.Battery)
  return target;
}

size_t Battery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Electronics.Battery)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional double capacity = 1;
  if (has_capacity()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Battery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Electronics.Battery)
  GOOGLE_DCHECK_NE(&from, this);
  const Battery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Battery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Electronics.Battery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Electronics.Battery)
    MergeFrom(*source);
  }
}

void Battery::MergeFrom(const Battery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Electronics.Battery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_capacity()) {
    set_capacity(from.capacity());
  }
}

void Battery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Electronics.Battery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Battery::CopyFrom(const Battery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Electronics.Battery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Battery::IsInitialized() const {
  return true;
}

void Battery::Swap(Battery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Battery::InternalSwap(Battery* other) {
  std::swap(capacity_, other->capacity_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Battery::GetMetadata() const {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Battery

// optional double capacity = 1;
bool Battery::has_capacity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Battery::set_has_capacity() {
  _has_bits_[0] |= 0x00000001u;
}
void Battery::clear_has_capacity() {
  _has_bits_[0] &= ~0x00000001u;
}
void Battery::clear_capacity() {
  capacity_ = 0;
  clear_has_capacity();
}
double Battery::capacity() const {
  // @@protoc_insertion_point(field_get:Electronics.Battery.capacity)
  return capacity_;
}
void Battery::set_capacity(double value) {
  set_has_capacity();
  capacity_ = value;
  // @@protoc_insertion_point(field_set:Electronics.Battery.capacity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bluetooth::kFrequencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bluetooth::Bluetooth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_component_5fstructure_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Electronics.Bluetooth)
}
Bluetooth::Bluetooth(const Bluetooth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frequency_ = from.frequency_;
  // @@protoc_insertion_point(copy_constructor:Electronics.Bluetooth)
}

void Bluetooth::SharedCtor() {
  _cached_size_ = 0;
  frequency_ = 0;
}

Bluetooth::~Bluetooth() {
  // @@protoc_insertion_point(destructor:Electronics.Bluetooth)
  SharedDtor();
}

void Bluetooth::SharedDtor() {
}

void Bluetooth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bluetooth::descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bluetooth& Bluetooth::default_instance() {
  protobuf_component_5fstructure_2eproto::InitDefaults();
  return *internal_default_instance();
}

Bluetooth* Bluetooth::New(::google::protobuf::Arena* arena) const {
  Bluetooth* n = new Bluetooth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bluetooth::Clear() {
// @@protoc_insertion_point(message_clear_start:Electronics.Bluetooth)
  frequency_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Bluetooth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Electronics.Bluetooth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double frequency = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_frequency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Electronics.Bluetooth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Electronics.Bluetooth)
  return false;
#undef DO_
}

void Bluetooth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Electronics.Bluetooth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double frequency = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->frequency(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Electronics.Bluetooth)
}

::google::protobuf::uint8* Bluetooth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Electronics.Bluetooth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double frequency = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->frequency(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Electronics.Bluetooth)
  return target;
}

size_t Bluetooth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Electronics.Bluetooth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional double frequency = 1;
  if (has_frequency()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bluetooth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Electronics.Bluetooth)
  GOOGLE_DCHECK_NE(&from, this);
  const Bluetooth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bluetooth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Electronics.Bluetooth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Electronics.Bluetooth)
    MergeFrom(*source);
  }
}

void Bluetooth::MergeFrom(const Bluetooth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Electronics.Bluetooth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_frequency()) {
    set_frequency(from.frequency());
  }
}

void Bluetooth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Electronics.Bluetooth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bluetooth::CopyFrom(const Bluetooth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Electronics.Bluetooth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bluetooth::IsInitialized() const {
  return true;
}

void Bluetooth::Swap(Bluetooth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bluetooth::InternalSwap(Bluetooth* other) {
  std::swap(frequency_, other->frequency_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bluetooth::GetMetadata() const {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Bluetooth

// optional double frequency = 1;
bool Bluetooth::has_frequency() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Bluetooth::set_has_frequency() {
  _has_bits_[0] |= 0x00000001u;
}
void Bluetooth::clear_has_frequency() {
  _has_bits_[0] &= ~0x00000001u;
}
void Bluetooth::clear_frequency() {
  frequency_ = 0;
  clear_has_frequency();
}
double Bluetooth::frequency() const {
  // @@protoc_insertion_point(field_get:Electronics.Bluetooth.frequency)
  return frequency_;
}
void Bluetooth::set_frequency(double value) {
  set_has_frequency();
  frequency_ = value;
  // @@protoc_insertion_point(field_set:Electronics.Bluetooth.frequency)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Camera::kFrequencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Camera::Camera()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_component_5fstructure_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Electronics.Camera)
}
Camera::Camera(const Camera& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frequency_ = from.frequency_;
  // @@protoc_insertion_point(copy_constructor:Electronics.Camera)
}

void Camera::SharedCtor() {
  _cached_size_ = 0;
  frequency_ = 0;
}

Camera::~Camera() {
  // @@protoc_insertion_point(destructor:Electronics.Camera)
  SharedDtor();
}

void Camera::SharedDtor() {
}

void Camera::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Camera::descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Camera& Camera::default_instance() {
  protobuf_component_5fstructure_2eproto::InitDefaults();
  return *internal_default_instance();
}

Camera* Camera::New(::google::protobuf::Arena* arena) const {
  Camera* n = new Camera;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Camera::Clear() {
// @@protoc_insertion_point(message_clear_start:Electronics.Camera)
  frequency_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Camera::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Electronics.Camera)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double frequency = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_frequency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Electronics.Camera)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Electronics.Camera)
  return false;
#undef DO_
}

void Camera::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Electronics.Camera)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double frequency = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->frequency(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Electronics.Camera)
}

::google::protobuf::uint8* Camera::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Electronics.Camera)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double frequency = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->frequency(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Electronics.Camera)
  return target;
}

size_t Camera::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Electronics.Camera)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional double frequency = 1;
  if (has_frequency()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Camera::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Electronics.Camera)
  GOOGLE_DCHECK_NE(&from, this);
  const Camera* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Camera>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Electronics.Camera)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Electronics.Camera)
    MergeFrom(*source);
  }
}

void Camera::MergeFrom(const Camera& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Electronics.Camera)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_frequency()) {
    set_frequency(from.frequency());
  }
}

void Camera::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Electronics.Camera)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Camera::CopyFrom(const Camera& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Electronics.Camera)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Camera::IsInitialized() const {
  return true;
}

void Camera::Swap(Camera* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Camera::InternalSwap(Camera* other) {
  std::swap(frequency_, other->frequency_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Camera::GetMetadata() const {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Camera

// optional double frequency = 1;
bool Camera::has_frequency() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Camera::set_has_frequency() {
  _has_bits_[0] |= 0x00000001u;
}
void Camera::clear_has_frequency() {
  _has_bits_[0] &= ~0x00000001u;
}
void Camera::clear_frequency() {
  frequency_ = 0;
  clear_has_frequency();
}
double Camera::frequency() const {
  // @@protoc_insertion_point(field_get:Electronics.Camera.frequency)
  return frequency_;
}
void Camera::set_frequency(double value) {
  set_has_frequency();
  frequency_ = value;
  // @@protoc_insertion_point(field_set:Electronics.Camera.frequency)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Force_Sensor::Force_Sensor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_component_5fstructure_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Electronics.Force_Sensor)
}
Force_Sensor::Force_Sensor(const Force_Sensor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Electronics.Force_Sensor)
}

void Force_Sensor::SharedCtor() {
  _cached_size_ = 0;
}

Force_Sensor::~Force_Sensor() {
  // @@protoc_insertion_point(destructor:Electronics.Force_Sensor)
  SharedDtor();
}

void Force_Sensor::SharedDtor() {
}

void Force_Sensor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Force_Sensor::descriptor() {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Force_Sensor& Force_Sensor::default_instance() {
  protobuf_component_5fstructure_2eproto::InitDefaults();
  return *internal_default_instance();
}

Force_Sensor* Force_Sensor::New(::google::protobuf::Arena* arena) const {
  Force_Sensor* n = new Force_Sensor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Force_Sensor::Clear() {
// @@protoc_insertion_point(message_clear_start:Electronics.Force_Sensor)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Force_Sensor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Electronics.Force_Sensor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Electronics.Force_Sensor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Electronics.Force_Sensor)
  return false;
#undef DO_
}

void Force_Sensor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Electronics.Force_Sensor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Electronics.Force_Sensor)
}

::google::protobuf::uint8* Force_Sensor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Electronics.Force_Sensor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Electronics.Force_Sensor)
  return target;
}

size_t Force_Sensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Electronics.Force_Sensor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Force_Sensor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Electronics.Force_Sensor)
  GOOGLE_DCHECK_NE(&from, this);
  const Force_Sensor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Force_Sensor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Electronics.Force_Sensor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Electronics.Force_Sensor)
    MergeFrom(*source);
  }
}

void Force_Sensor::MergeFrom(const Force_Sensor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Electronics.Force_Sensor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Force_Sensor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Electronics.Force_Sensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Force_Sensor::CopyFrom(const Force_Sensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Electronics.Force_Sensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Force_Sensor::IsInitialized() const {
  return true;
}

void Force_Sensor::Swap(Force_Sensor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Force_Sensor::InternalSwap(Force_Sensor* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Force_Sensor::GetMetadata() const {
  protobuf_component_5fstructure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_component_5fstructure_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Force_Sensor

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Motor::kMotorFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::Electronics::Component,
    ::google::protobuf::internal::MessageTypeTraits< ::Electronics::Motor >, 11, false >
  Motor::motor(kMotorFieldNumber, *::Electronics::Motor::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Voltage_Regulator::kVoltageRegulatorFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::Electronics::Component,
    ::google::protobuf::internal::MessageTypeTraits< ::Electronics::Voltage_Regulator >, 11, false >
  Voltage_Regulator::voltage_regulator(kVoltageRegulatorFieldNumber, *::Electronics::Voltage_Regulator::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int H_Bridge::kHBridgeFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::Electronics::Component,
    ::google::protobuf::internal::MessageTypeTraits< ::Electronics::H_Bridge >, 11, false >
  H_Bridge::h_bridge(kHBridgeFieldNumber, *::Electronics::H_Bridge::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Micro_Controller::kMicroControllerFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::Electronics::Component,
    ::google::protobuf::internal::MessageTypeTraits< ::Electronics::Micro_Controller >, 11, false >
  Micro_Controller::micro_controller(kMicroControllerFieldNumber, *::Electronics::Micro_Controller::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Battery::kBatteryFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::Electronics::Component,
    ::google::protobuf::internal::MessageTypeTraits< ::Electronics::Battery >, 11, false >
  Battery::battery(kBatteryFieldNumber, *::Electronics::Battery::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bluetooth::kBluetoothFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::Electronics::Component,
    ::google::protobuf::internal::MessageTypeTraits< ::Electronics::Bluetooth >, 11, false >
  Bluetooth::bluetooth(kBluetoothFieldNumber, *::Electronics::Bluetooth::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Camera::kCameraFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::Electronics::Component,
    ::google::protobuf::internal::MessageTypeTraits< ::Electronics::Camera >, 11, false >
  Camera::camera(kCameraFieldNumber, *::Electronics::Camera::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Force_Sensor::kForceSensorFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::Electronics::Component,
    ::google::protobuf::internal::MessageTypeTraits< ::Electronics::Force_Sensor >, 11, false >
  Force_Sensor::force_sensor(kForceSensorFieldNumber, *::Electronics::Force_Sensor::internal_default_instance());

// @@protoc_insertion_point(namespace_scope)

}  // namespace Electronics

// @@protoc_insertion_point(global_scope)
